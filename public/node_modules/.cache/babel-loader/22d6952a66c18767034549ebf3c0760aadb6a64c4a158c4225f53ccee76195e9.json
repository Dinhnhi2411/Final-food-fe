{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\nimport { codes } from 'micromark-util-symbol/codes.js';\nimport { constants } from 'micromark-util-symbol/constants.js';\nimport { types } from 'micromark-util-symbol/types.js';\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (code === codes.lessThan) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return destinationEnclosedBefore;\n    }\n    if (code === codes.eof || code === codes.rightParenthesis || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(types.chunkString, {\n      contentType: constants.contentTypeString\n    });\n    return destinationRaw(code);\n  }\n\n  /** @type {State} */\n  function destinationEnclosedBefore(code) {\n    if (code === codes.greaterThan) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(types.chunkString, {\n      contentType: constants.contentTypeString\n    });\n    return destinationEnclosed(code);\n  }\n\n  /** @type {State} */\n  function destinationEnclosed(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.chunkString);\n      effects.exit(stringType);\n      return destinationEnclosedBefore(code);\n    }\n    if (code === codes.eof || code === codes.lessThan || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === codes.backslash ? destinationEnclosedEscape : destinationEnclosed;\n  }\n\n  /** @type {State} */\n  function destinationEnclosedEscape(code) {\n    if (code === codes.lessThan || code === codes.greaterThan || code === codes.backslash) {\n      effects.consume(code);\n      return destinationEnclosed;\n    }\n    return destinationEnclosed(code);\n  }\n\n  /** @type {State} */\n  function destinationRaw(code) {\n    if (code === codes.leftParenthesis) {\n      if (++balance > limit) return nok(code);\n      effects.consume(code);\n      return destinationRaw;\n    }\n    if (code === codes.rightParenthesis) {\n      if (!balance--) {\n        effects.exit(types.chunkString);\n        effects.exit(stringType);\n        effects.exit(rawType);\n        effects.exit(type);\n        return ok(code);\n      }\n      effects.consume(code);\n      return destinationRaw;\n    }\n    if (code === codes.eof || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code);\n      effects.exit(types.chunkString);\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (asciiControl(code)) return nok(code);\n    effects.consume(code);\n    return code === codes.backslash ? destinationRawEscape : destinationRaw;\n  }\n\n  /** @type {State} */\n  function destinationRawEscape(code) {\n    if (code === codes.leftParenthesis || code === codes.rightParenthesis || code === codes.backslash) {\n      effects.consume(code);\n      return destinationRaw;\n    }\n    return destinationRaw(code);\n  }\n}","map":{"version":3,"names":["asciiControl","markdownLineEndingOrSpace","markdownLineEnding","codes","constants","types","factoryDestination","effects","ok","nok","type","literalType","literalMarkerType","rawType","stringType","max","limit","Number","POSITIVE_INFINITY","balance","start","code","lessThan","enter","consume","exit","destinationEnclosedBefore","eof","rightParenthesis","chunkString","contentType","contentTypeString","destinationRaw","greaterThan","destinationEnclosed","backslash","destinationEnclosedEscape","leftParenthesis","destinationRawEscape"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/node_modules/micromark-factory-destination/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (code === codes.lessThan) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (\n      code === codes.eof ||\n      code === codes.rightParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return destinationRaw(code)\n  }\n\n  /** @type {State} */\n  function destinationEnclosedBefore(code) {\n    if (code === codes.greaterThan) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return destinationEnclosed(code)\n  }\n\n  /** @type {State} */\n  function destinationEnclosed(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      markdownLineEnding(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash\n      ? destinationEnclosedEscape\n      : destinationEnclosed\n  }\n\n  /** @type {State} */\n  function destinationEnclosedEscape(code) {\n    if (\n      code === codes.lessThan ||\n      code === codes.greaterThan ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  /** @type {State} */\n  function destinationRaw(code) {\n    if (code === codes.leftParenthesis) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === codes.rightParenthesis) {\n      if (!balance--) {\n        effects.exit(types.chunkString)\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === codes.eof || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === codes.backslash ? destinationRawEscape : destinationRaw\n  }\n\n  /** @type {State} */\n  function destinationRawEscape(code) {\n    if (\n      code === codes.leftParenthesis ||\n      code === codes.rightParenthesis ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}