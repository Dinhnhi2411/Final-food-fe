{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport apiService from \"../../app/apiService\";\nimport { cloudinaryUpload } from \"../../utils/cloudinary\";\nconst initialState = {\n  isLoading: false,\n  error: null,\n  reports: {},\n  products: [],\n  product: {},\n  totalPageProduct: 1,\n  totalProduct: 0,\n  filters: {}\n};\nconst slice = createSlice({\n  name: \"dashboard\",\n  initialState,\n  reducers: {\n    startLoading(state) {\n      state.isLoading = true;\n    },\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    getReportsDashboardSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.reports = action.payload;\n    },\n    getProductDashBoardSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.product = action.payload;\n    },\n    getProductsDashboardSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.totalProduct = action.payload.totalResults;\n      state.products = action.payload.results;\n      state.totalPageProduct = action.payload.totalPages;\n    },\n    getOrdersDashboardSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.orders = action.payload.orders;\n      state.totalPages = action.payload.totalPageOrder;\n    },\n    createProductDashBoardSuccess(state) {\n      state.isLoading = false;\n      state.error = null;\n    },\n    updateProductDashBoardSuccess(state) {\n      state.isLoading = false;\n      state.error = null;\n    },\n    handleChangeDashBoardFilters(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    handleClearDashBoardFilters(state) {\n      state.isLoading = false;\n      state.error = null;\n      state.filters = {};\n    }\n  }\n});\nexport const {\n  handleChangeDashBoardFilters,\n  handleClearDashBoardFilters\n} = slice.actions;\nexport const getAllProductsDashboard = filters => async (dispatch, getState) => {\n  dispatch(slice.actions.startLoading());\n  try {\n    filters = {\n      sortBy: \"updatedAt.desc\",\n      ...filters,\n      ...getState().dashboard.filters\n    };\n    const response = await apiService.get(\"/products\", {\n      params: filters\n    });\n    if (response) {\n      dispatch(slice.actions.getProductsDashboardSuccess(response.data));\n    }\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n    toast.error(error.message);\n  }\n};\nexport const getOrdersDashboard = filters => async dispatch => {\n  dispatch(slice.actions.startLoading());\n  try {\n    const response = await apiService.get(\"/orders\", {\n      params: filters\n    });\n    if (response) {\n      dispatch(slice.actions.getOrdersDashboardSuccess(response.data));\n    }\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n    toast.error(error.message);\n  }\n};\nexport const getReportsDashboard = filters => async dispatch => {\n  dispatch(slice.actions.startLoading());\n  try {\n    const response = await apiService.get(\"/dashboards\", {\n      params: {\n        ...filters\n      }\n    });\n    if (response) {\n      dispatch(slice.actions.getReportsDashboardSuccess(response.data));\n    }\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n    toast.error(error.message);\n  }\n};\nexport const createProduct = _ref => {\n  let {\n    productName,\n    types,\n    price,\n    priceSale,\n    unit,\n    rating,\n    image,\n    description\n  } = _ref;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const imageUrl = await cloudinaryUpload(image);\n      const response = await apiService.post(\"/products\", {\n        productName,\n        types,\n        price,\n        priceSale,\n        unit,\n        rating,\n        description,\n        image: imageUrl\n      });\n      dispatch(slice.actions.createProductDashBoardSuccess(response.data));\n      toast.success(\"Create Producr Successfully\");\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n      toast.error(error.message);\n    }\n  };\n};\nexport const editProduct = _ref2 => {\n  let {\n    id,\n    productName,\n    types,\n    price,\n    priceSale,\n    unit,\n    image,\n    description,\n    userId,\n    page\n  } = _ref2;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const data = {\n        productName,\n        types,\n        price,\n        priceSale,\n        unit,\n        image,\n        description\n      };\n      if (image instanceof File) {\n        const imageUrl = await cloudinaryUpload(image);\n        data.image = imageUrl;\n      }\n      const response = await apiService.put(`/products/${id}`, data);\n      dispatch(slice.actions.updateProductDashBoardSucces(response.data));\n      toast.success(\"Edit Product Successessfully\");\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n      toast.error(error.message);\n    }\n  };\n};","map":{"version":3,"names":["createSlice","toast","apiService","cloudinaryUpload","initialState","isLoading","error","reports","products","product","totalPageProduct","totalProduct","filters","slice","name","reducers","startLoading","state","hasError","action","payload","getReportsDashboardSuccess","getProductDashBoardSuccess","getProductsDashboardSuccess","totalResults","results","totalPages","getOrdersDashboardSuccess","orders","totalPageOrder","createProductDashBoardSuccess","updateProductDashBoardSuccess","handleChangeDashBoardFilters","handleClearDashBoardFilters","actions","getAllProductsDashboard","dispatch","getState","sortBy","dashboard","response","get","params","data","message","getOrdersDashboard","getReportsDashboard","createProduct","productName","types","price","priceSale","unit","rating","image","description","imageUrl","post","success","editProduct","id","userId","page","File","put","updateProductDashBoardSucces"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/src/features/dashboard/dashboardSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport apiService from \"../../app/apiService\";\r\nimport { cloudinaryUpload } from \"../../utils/cloudinary\";\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  reports: {},\r\n  products: [],\r\n  product: {},\r\n  totalPageProduct: 1,\r\n  totalProduct: 0,\r\n  filters: {},\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState,\r\n  reducers: {\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    getReportsDashboardSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.reports = action.payload;\r\n    },\r\n    getProductDashBoardSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.product = action.payload;\r\n    },\r\n     getProductsDashboardSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.totalProduct = action.payload.totalResults;\r\n      state.products = action.payload.results;\r\n\r\n      state.totalPageProduct = action.payload.totalPages;\r\n    },\r\n     getOrdersDashboardSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.orders = action.payload.orders;\r\n      state.totalPages = action.payload.totalPageOrder;\r\n    },\r\n    createProductDashBoardSuccess(state) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n      updateProductDashBoardSuccess(state) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n     handleChangeDashBoardFilters(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.filters = { ...state.filters, ...action.payload };\r\n    },\r\n     handleClearDashBoardFilters(state) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.filters = {};\r\n    },\r\n\r\n}\r\n\r\n});\r\nexport const {\r\n handleChangeDashBoardFilters,\r\n handleClearDashBoardFilters\r\n} = slice.actions\r\nexport const getAllProductsDashboard =\r\n  (filters) => async (dispatch, getState) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      filters = {\r\n        sortBy: \"updatedAt.desc\",\r\n        ...filters,\r\n        ...getState().dashboard.filters,\r\n      };\r\n      const response = await apiService.get(\"/products\", {\r\n        params: filters,\r\n      });\r\n\r\n      if (response) {\r\n        dispatch(slice.actions.getProductsDashboardSuccess(response.data));\r\n      }\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  export const getOrdersDashboard = (filters) => async (dispatch) => {\r\n  dispatch(slice.actions.startLoading());\r\n  try {\r\n    const response = await apiService.get(\"/orders\", {\r\n      params: filters,\r\n    });\r\n    if (response) {\r\n      dispatch(slice.actions.getOrdersDashboardSuccess(response.data));\r\n    }\r\n  } catch (error) {\r\n    dispatch(slice.actions.hasError(error));\r\n    toast.error(error.message);\r\n  }\r\n};\r\n\r\nexport const getReportsDashboard = (filters) => async (dispatch) => {\r\n  dispatch(slice.actions.startLoading());\r\n  try {\r\n    const response = await apiService.get(\"/dashboards\", {\r\n      params: { ...filters },\r\n    });\r\n\r\n    if (response) {\r\n      dispatch(slice.actions.getReportsDashboardSuccess(response.data));\r\n    }\r\n  } catch (error) {\r\n    dispatch(slice.actions.hasError(error));\r\n    toast.error(error.message);\r\n  }\r\n};\r\nexport const createProduct = ({\r\n    productName, types, price, priceSale, unit, rating, image, description\r\n}) =>\r\n async(dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\ntry{\r\nconst imageUrl = await cloudinaryUpload(image);\r\nconst response = await apiService.post(\"/products\", {\r\n    productName, types, price, priceSale, unit, rating, description, image: imageUrl,\r\n});\r\ndispatch(slice.actions.createProductDashBoardSuccess(response.data));\r\ntoast.success(\"Create Producr Successfully\");\r\n\r\n}catch(error) {\r\ndispatch(slice.actions.hasError(error.message));\r\ntoast.error(error.message);\r\n}\r\n};\r\n\r\n\r\nexport const editProduct =\r\n  ({ id, productName, types, price, priceSale, unit, image,description, userId, page }) =>\r\n    async (dispatch) => {\r\n      dispatch(slice.actions.startLoading());\r\n      try {\r\n        const data = { productName, types, price, priceSale, unit, image,description }\r\n\r\n        if (image instanceof File) {\r\n          const imageUrl = await cloudinaryUpload(image);\r\n          data.image = imageUrl;\r\n        }\r\n\r\n        const response = await apiService.put(`/products/${id}`, data);\r\n        dispatch(slice.actions.updateProductDashBoardSucces(response.data))\r\n        toast.success(\"Edit Product Successessfully\");\r\n      } catch (error) {\r\n        dispatch(slice.actions.hasError(error.message));\r\n        toast.error(error.message);\r\n      }\r\n    };\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}