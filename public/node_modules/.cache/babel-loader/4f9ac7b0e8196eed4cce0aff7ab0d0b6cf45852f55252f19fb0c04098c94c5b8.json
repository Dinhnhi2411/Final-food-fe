{"ast":null,"code":"import _slicedToArray from \"D:/Gitlab/dinhngocliennhi1999_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"classes\", \"closeAfterTransition\", \"component\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport FocusTrap from '../FocusTrap';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var open = ownerState.open,\n    exited = ownerState.exited,\n    classes = ownerState.classes;\n  var slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\nvar defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden, _ref;\n  var children = props.children,\n    classesProp = props.classes,\n    _props$closeAfterTran = props.closeAfterTransition,\n    closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n    component = props.component,\n    container = props.container,\n    _props$disableAutoFoc = props.disableAutoFocus,\n    disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n    _props$disableEnforce = props.disableEnforceFocus,\n    disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n    _props$disableEscapeK = props.disableEscapeKeyDown,\n    disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n    _props$disablePortal = props.disablePortal,\n    disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n    _props$disableRestore = props.disableRestoreFocus,\n    disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n    _props$disableScrollL = props.disableScrollLock,\n    disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n    _props$hideBackdrop = props.hideBackdrop,\n    hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n    _props$keepMounted = props.keepMounted,\n    keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n    _props$manager = props.manager,\n    manager = _props$manager === void 0 ? defaultManager : _props$manager,\n    onBackdropClick = props.onBackdropClick,\n    onClose = props.onClose,\n    onKeyDown = props.onKeyDown,\n    open = props.open,\n    onTransitionEnter = props.onTransitionEnter,\n    onTransitionExited = props.onTransitionExited,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    exited = _React$useState2[0],\n    setExited = _React$useState2[1];\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n  var ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n    if (!node) {\n      return;\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n  var ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition: closeAfterTransition,\n    disableAutoFocus: disableAutoFocus,\n    disableEnforceFocus: disableEnforceFocus,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    disablePortal: disablePortal,\n    disableRestoreFocus: disableRestoreFocus,\n    disableScrollLock: disableScrollLock,\n    exited: exited,\n    hideBackdrop: hideBackdrop,\n    keepMounted: keepMounted\n  });\n  var classes = useUtilityClasses(ownerState);\n  var handleEnter = function handleEnter() {\n    setExited(false);\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n  var handleExited = function handleExited() {\n    setExited(true);\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  var childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n  var Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: handleRef,\n      role: 'presentation',\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState: ownerState\n  });\n  var BackdropComponent = slots.backdrop;\n  var backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    additionalProps: {\n      'aria-hidden': true,\n      onClick: handleBackdropClick,\n      open: open\n    },\n    className: classes.backdrop,\n    ownerState: ownerState\n  });\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default ModalUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","elementAcceptingRef","HTMLElementType","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_createChainedFunction","createChainedFunction","unstable_useEventCallback","useEventCallback","composeClasses","Portal","ModalManager","ariaHidden","FocusTrap","getModalUtilityClass","useSlotProps","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","classes","slots","root","getContainer","container","getHasTransition","props","children","hasOwnProperty","defaultManager","ModalUnstyled","forwardRef","ref","_props$ariaHidden","_ref","classesProp","closeAfterTransition","component","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","onTransitionEnter","onTransitionExited","slotProps","other","useState","setExited","modal","useRef","mountNodeRef","modalRef","handleRef","hasTransition","ariaHiddenProp","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","role","className","BackdropComponent","backdrop","backdropProps","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","isRequired","object","bool","oneOfType","func","shape"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"classes\", \"closeAfterTransition\", \"component\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport FocusTrap from '../FocusTrap';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden, _ref;\n\n  const {\n    children,\n    classes: classesProp,\n    closeAfterTransition = false,\n    component,\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n\n    /* eslint-disable react/prop-types */\n    onTransitionEnter,\n    onTransitionExited,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: handleRef,\n      role: 'presentation',\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState\n  });\n  const BackdropComponent = slots.backdrop;\n  const backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    additionalProps: {\n      'aria-hidden': true,\n      onClick: handleBackdropClick,\n      open\n    },\n    className: classes.backdrop,\n    ownerState\n  });\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default ModalUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}