{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function pascalCaseTransform(input, index) {\n  var firstChar = input.charAt(0);\n  var lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return \"_\" + firstChar + lowerChars;\n  }\n  return \"\" + firstChar.toUpperCase() + lowerChars;\n}\nexport function pascalCaseTransformMerge(input) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\nexport function pascalCase(input, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return noCase(input, __assign({\n    delimiter: \"\",\n    transform: pascalCaseTransform\n  }, options));\n}","map":{"version":3,"mappings":";AAAA,SAASA,MAAM,QAAiB,SAAS;AAIzC,OAAM,SAAUC,mBAAmB,CAACC,KAAa,EAAEC,KAAa;EAC9D,IAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC;EACjC,IAAMC,UAAU,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;EAChD,IAAIL,KAAK,GAAG,CAAC,IAAIC,SAAS,IAAI,GAAG,IAAIA,SAAS,IAAI,GAAG,EAAE;IACrD,OAAO,MAAIA,SAAS,GAAGE,UAAY;;EAErC,OAAO,KAAGF,SAAS,CAACK,WAAW,EAAE,GAAGH,UAAY;AAClD;AAEA,OAAM,SAAUI,wBAAwB,CAACR,KAAa;EACpD,OAAOA,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAACI,WAAW,EAAE,GAAGP,KAAK,CAACS,KAAK,CAAC,CAAC,CAAC,CAACH,WAAW,EAAE;AACrE;AAEA,OAAM,SAAUI,UAAU,CAACV,KAAa,EAAEW,OAAqB;EAArB;IAAAA,YAAqB;EAAA;EAC7D,OAAOb,MAAM,CAACE,KAAK;IACjBY,SAAS,EAAE,EAAE;IACbC,SAAS,EAAEd;EAAmB,GAC3BY,OAAO,EACV;AACJ","names":["noCase","pascalCaseTransform","input","index","firstChar","charAt","lowerChars","substr","toLowerCase","toUpperCase","pascalCaseTransformMerge","slice","pascalCase","options","delimiter","transform"],"sources":["D:\\Gitlab\\dinhngocliennhi1999_frontend\\node_modules\\pascal-case\\src\\index.ts"],"sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function pascalCaseTransform(input: string, index: number) {\n  const firstChar = input.charAt(0);\n  const lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return `_${firstChar}${lowerChars}`;\n  }\n  return `${firstChar.toUpperCase()}${lowerChars}`;\n}\n\nexport function pascalCaseTransformMerge(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexport function pascalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"\",\n    transform: pascalCaseTransform,\n    ...options,\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}