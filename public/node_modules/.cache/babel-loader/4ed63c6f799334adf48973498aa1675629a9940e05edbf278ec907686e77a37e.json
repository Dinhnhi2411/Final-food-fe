{"ast":null,"code":"/* eslint-disable material-ui/mui-name-matches-component-name */\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport _useThemeProps from '../styles/useThemeProps';\nvar Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: function overridesResolver(props, styles) {\n      var ownerState = props.ownerState;\n      return [styles.root, styles[\"maxWidth\".concat(capitalize(String(ownerState.maxWidth)))], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: function useThemeProps(inProps) {\n    return _useThemeProps({\n      props: inProps,\n      name: 'MuiContainer'\n    });\n  }\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","map":{"version":3,"names":["PropTypes","createContainer","capitalize","styled","useThemeProps","Container","createStyledComponent","name","slot","overridesResolver","props","styles","ownerState","root","String","maxWidth","fixed","disableGutters","inProps","process","env","NODE_ENV","propTypes","children","node","classes","object","component","elementType","bool","oneOfType","oneOf","string","sx","arrayOf","func"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/node_modules/@mui/material/esm/Container/Container.js"],"sourcesContent":["/* eslint-disable material-ui/mui-name-matches-component-name */\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,eAAe,QAAQ,aAAa;AAC7C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,cAAa,MAAM,yBAAyB;AACnD,IAAMC,SAAS,GAAGJ,eAAe,CAAC;EAChCK,qBAAqB,EAAEH,MAAM,CAAC,KAAK,EAAE;IACnCI,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE,MAAM;IACZC,iBAAiB,EAAE,2BAACC,KAAK,EAAEC,MAAM,EAAK;MACpC,IACEC,UAAU,GACRF,KAAK,CADPE,UAAU;MAEZ,OAAO,CAACD,MAAM,CAACE,IAAI,EAAEF,MAAM,mBAAYT,UAAU,CAACY,MAAM,CAACF,UAAU,CAACG,QAAQ,CAAC,CAAC,EAAG,EAAEH,UAAU,CAACI,KAAK,IAAIL,MAAM,CAACK,KAAK,EAAEJ,UAAU,CAACK,cAAc,IAAIN,MAAM,CAACM,cAAc,CAAC;IAC1K;EACF,CAAC,CAAC;EACFb,aAAa,EAAE,uBAAAc,OAAO;IAAA,OAAId,cAAa,CAAC;MACtCM,KAAK,EAAEQ,OAAO;MACdX,IAAI,EAAE;IACR,CAAC,CAAC;EAAA;AACJ,CAAC,CAAC;AACFY,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGhB,SAAS,CAACiB;AAClD,yBACE;EACA;EACA;EACA;EACA;;EAEA;AACF;AACA;EACEC,QAAQ,EAAEvB,SAAS,CAACwB,IAAI;EAExB;AACF;AACA;EACEC,OAAO,EAAEzB,SAAS,CAAC0B,MAAM;EAEzB;AACF;AACA;AACA;EACEC,SAAS,EAAE3B,SAAS,CAAC4B,WAAW;EAEhC;AACF;AACA;AACA;EACEX,cAAc,EAAEjB,SAAS,CAAC6B,IAAI;EAE9B;AACF;AACA;AACA;AACA;AACA;AACA;EACEb,KAAK,EAAEhB,SAAS,CAAC6B,IAAI;EAErB;AACF;AACA;AACA;AACA;AACA;EACEd,QAAQ,EAAEf;EACV,sCACC8B,SAAS,CAAC,CAAC9B,SAAS,CAAC+B,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE/B,SAAS,CAACgC,MAAM,CAAC,CAAC;EAEtF;AACF;AACA;EACEC,EAAE,EAAEjC,SAAS,CAAC8B,SAAS,CAAC,CAAC9B,SAAS,CAACkC,OAAO,CAAClC,SAAS,CAAC8B,SAAS,CAAC,CAAC9B,SAAS,CAACmC,IAAI,EAAEnC,SAAS,CAAC0B,MAAM,EAAE1B,SAAS,CAAC6B,IAAI,CAAC,CAAC,CAAC,EAAE7B,SAAS,CAACmC,IAAI,EAAEnC,SAAS,CAAC0B,MAAM,CAAC;AACxJ,CAAC,GAAG,KAAK,CAAC;AACV,eAAerB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}