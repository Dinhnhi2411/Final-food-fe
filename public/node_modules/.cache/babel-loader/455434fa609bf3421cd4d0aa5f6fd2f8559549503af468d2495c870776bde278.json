{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gitlab\\\\dinhngocliennhi1999_frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useEffect } from \"react\";\nimport apiService from \"../app/apiService\";\nimport { isValidToken } from \"../utils/jwt\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null\n};\nconst INITIALIZE = \"INITIALIZE\";\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nconst REGISTER_SUCCESS = \"AUTH.REGISTER_SUCCESS\";\nconst LOGOUT = \"LOGOUT\";\nconst UPDATE_PROFILE = \"AUTH.UPDATE_PROFILE\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case INITIALIZE:\n      const {\n        isAuthenticated,\n        user\n      } = action.payload;\n      return {\n        ...state,\n        isAuthenticated,\n        isInitialized: true,\n        user\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null\n      };\n    case UPDATE_PROFILE:\n      const {\n        name,\n        avatarUrl,\n        address,\n        city,\n        country,\n        phone,\n        logoUrl,\n        storeName,\n        company\n      } = action.payload;\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          name,\n          avatarUrl,\n          address,\n          city,\n          country,\n          phone,\n          logoUrl,\n          storeName,\n          company\n        }\n      };\n    default:\n      return state;\n  }\n};\nconst AuthContext = /*#__PURE__*/createContext({\n  ...initialState\n});\n// save accessToken\nconst setSession = accessToken => {\n  if (accessToken) {\n    window.localStorage.setItem(\"accessToken\", accessToken);\n    apiService.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n  } else {\n    window.localStorage.removeItem(\"accessToken\");\n    delete apiService.defaults.headers.common.Authorization;\n  }\n};\nfunction AuthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const updatedProfile = useSelector(state => state.user.updatedProfile);\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        const accessToken = window.localStorage.getItem(\"accessToken\");\n        if (accessToken && isValidToken(accessToken)) {\n          setSession(accessToken);\n          const response = await apiService.get(\"/users/me\");\n          const user = response.data;\n          // console.log(\"user\", response.data.data);\n          dispatch({\n            type: INITIALIZE,\n            payload: {\n              isAuthenticated: true,\n              user\n            }\n          });\n        } else {\n          setSession(null);\n          dispatch({\n            type: INITIALIZE,\n            payload: {\n              isAuthenticated: false,\n              user: null\n            }\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        setSession(null);\n        dispatch({\n          type: INITIALIZE,\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    };\n    initialize();\n  }, []);\n  useEffect(() => {\n    if (updatedProfile) dispatch({\n      type: UPDATE_PROFILE,\n      payload: updatedProfile\n    });\n  }, [updatedProfile]);\n  const login = async (_ref2, callback) => {\n    let {\n      email,\n      password\n    } = _ref2;\n    const response = await apiService.post(\"/auth/login\", {\n      email,\n      password\n    });\n    const {\n      user,\n      accessToken\n    } = response.data;\n    setSession(accessToken);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        user\n      }\n    });\n    callback();\n  };\n  const register = async (_ref3, callback) => {\n    let {\n      name,\n      email,\n      password\n    } = _ref3;\n    const response = await apiService.post(\"/users/customer\", {\n      name,\n      email,\n      password\n    });\n    const {\n      user,\n      accessToken\n    } = response.data;\n    setSession(accessToken);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: {\n        user\n      }\n    });\n    callback();\n  };\n  const logout = callback => {\n    setSession(null);\n    dispatch({\n      type: LOGOUT\n    });\n    callback();\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      login,\n      register,\n      logout,\n      updatedProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"cQSfZRUiapAo4CvssfY3IRgPPpY=\", false, function () {\n  return [useSelector];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","apiService","isValidToken","useSelector","initialState","isAuthenticated","isInitialized","user","INITIALIZE","LOGIN_SUCCESS","REGISTER_SUCCESS","LOGOUT","UPDATE_PROFILE","reducer","state","action","type","payload","name","avatarUrl","address","city","country","phone","logoUrl","storeName","company","AuthContext","setSession","accessToken","window","localStorage","setItem","defaults","headers","common","Authorization","removeItem","AuthProvider","children","dispatch","updatedProfile","initialize","getItem","response","get","data","err","console","error","login","callback","email","password","post","register","logout"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useReducer, useEffect } from \"react\";\r\nimport apiService from \"../app/apiService\";\r\nimport { isValidToken } from \"../utils/jwt\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  isInitialized: false,\r\n  user: null,\r\n};\r\n\r\nconst INITIALIZE = \"INITIALIZE\";\r\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nconst REGISTER_SUCCESS = \"AUTH.REGISTER_SUCCESS\";\r\nconst LOGOUT = \"LOGOUT\";\r\nconst UPDATE_PROFILE = \"AUTH.UPDATE_PROFILE\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZE:\r\n      const { isAuthenticated, user } = action.payload;\r\n      return {\r\n        ...state,\r\n        isAuthenticated,\r\n        isInitialized: true,\r\n        user,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n    case UPDATE_PROFILE:\r\n      const {\r\n        name,\r\n        avatarUrl,\r\n        address,\r\n        city,\r\n        country,\r\n        phone,\r\n        logoUrl,\r\n        storeName,\r\n        company,\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          name,\r\n          avatarUrl,\r\n          address,\r\n          city,\r\n          country,\r\n          phone,\r\n          logoUrl,\r\n          storeName,\r\n          company,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst AuthContext = createContext({ ...initialState });\r\n// save accessToken\r\nconst setSession = (accessToken) => {\r\n  if (accessToken) {\r\n    window.localStorage.setItem(\"accessToken\", accessToken);\r\n    apiService.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\r\n  } else {\r\n    window.localStorage.removeItem(\"accessToken\");\r\n    delete apiService.defaults.headers.common.Authorization;\r\n  }\r\n};\r\n\r\nfunction AuthProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const updatedProfile = useSelector((state) => state.user.updatedProfile);\r\n\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      try {\r\n        const accessToken = window.localStorage.getItem(\"accessToken\");\r\n\r\n        if (accessToken && isValidToken(accessToken)) {\r\n          setSession(accessToken);\r\n\r\n          const response = await apiService.get(\"/users/me\");\r\n          const user = response.data;\r\n          // console.log(\"user\", response.data.data);\r\n          dispatch({\r\n            type: INITIALIZE,\r\n            payload: { isAuthenticated: true, user },\r\n          });\r\n        } else {\r\n          setSession(null);\r\n\r\n          dispatch({\r\n            type: INITIALIZE,\r\n            payload: { isAuthenticated: false, user: null },\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n\r\n        setSession(null);\r\n        dispatch({\r\n          type: INITIALIZE,\r\n          payload: {\r\n            isAuthenticated: false,\r\n            user: null,\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    initialize();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (updatedProfile)\r\n      dispatch({ type: UPDATE_PROFILE, payload: updatedProfile });\r\n  }, [updatedProfile]);\r\n\r\n  const login = async ({ email, password }, callback) => {\r\n    const response = await apiService.post(\"/auth/login\", { email, password });\r\n    const { user, accessToken } = response.data;\r\n    setSession(accessToken);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: { user },\r\n    });\r\n\r\n    callback();\r\n  };\r\n\r\n  const register = async ({ name, email, password }, callback) => {\r\n    const response = await apiService.post(\"/users/customer\", {\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n    const { user, accessToken } = response.data;\r\n\r\n    setSession(accessToken);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: { user },\r\n    });\r\n\r\n    callback();\r\n  };\r\n\r\n  const logout = (callback) => {\r\n    setSession(null);\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n    callback();\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        login,\r\n        register,\r\n        logout,\r\n        updatedProfile,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}