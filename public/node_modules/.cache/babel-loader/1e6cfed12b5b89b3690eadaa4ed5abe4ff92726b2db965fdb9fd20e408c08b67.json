{"ast":null,"code":"import _slicedToArray from \"D:/Gitlab/dinhngocliennhi1999_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n *\n * *   Escape hatch for broken dependencies not supporting SSR.\n * *   Improve the time-to-first paint on the client by only rendering above the fold.\n * *   Reduce the rendering time on the server.\n * *   Under too heavy server load, you can turn on service degradation.\n *\n * Demos:\n *\n * - [No SSR](https://mui.com/base/react-no-ssr/)\n *\n * API:\n *\n * - [NoSsr API](https://mui.com/base/api/no-ssr/)\n */\nfunction NoSsr(props) {\n  var children = props.children,\n    _props$defer = props.defer,\n    defer = _props$defer === void 0 ? false : _props$defer,\n    _props$fallback = props.fallback,\n    fallback = _props$fallback === void 0 ? null : _props$fallback;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mountedState = _React$useState2[0],\n    setMountedState = _React$useState2[1];\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountedState ? children : fallback\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   * @default false\n   */\n  defer: PropTypes.bool,\n  /**\n   * The fallback content to display.\n   * @default null\n   */\n  fallback: PropTypes.node\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\nexport default NoSsr;","map":{"version":3,"names":["React","PropTypes","exactProp","unstable_useEnhancedEffect","useEnhancedEffect","jsx","_jsx","NoSsr","props","children","defer","fallback","useState","mountedState","setMountedState","useEffect","Fragment","process","env","NODE_ENV","propTypes","node","bool"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/node_modules/@mui/base/NoSsr/NoSsr.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n *\n * *   Escape hatch for broken dependencies not supporting SSR.\n * *   Improve the time-to-first paint on the client by only rendering above the fold.\n * *   Reduce the rendering time on the server.\n * *   Under too heavy server load, you can turn on service degradation.\n *\n * Demos:\n *\n * - [No SSR](https://mui.com/base/react-no-ssr/)\n *\n * API:\n *\n * - [NoSsr API](https://mui.com/base/api/no-ssr/)\n */\nfunction NoSsr(props) {\n  const {\n    children,\n    defer = false,\n    fallback = null\n  } = props;\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(() => {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountedState ? children : fallback\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   * @default false\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   * @default null\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,EAAEC,0BAA0B,IAAIC,iBAAiB,QAAQ,YAAY;AACvF,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAK,CAACC,KAAK,EAAE;EACpB,IACEC,QAAQ,GAGND,KAAK,CAHPC,QAAQ;IAAA,eAGND,KAAK,CAFPE,KAAK;IAALA,KAAK,6BAAG,KAAK;IAAA,kBAEXF,KAAK,CADPG,QAAQ;IAARA,QAAQ,gCAAG,IAAI;EAEjB,sBAAwCX,KAAK,CAACY,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtDC,YAAY;IAAEC,eAAe;EACpCV,iBAAiB,CAAC,YAAM;IACtB,IAAI,CAACM,KAAK,EAAE;MACVI,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EACXV,KAAK,CAACe,SAAS,CAAC,YAAM;IACpB,IAAIL,KAAK,EAAE;MACTI,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,OAAO,aAAaJ,IAAI,CAACN,KAAK,CAACgB,QAAQ,EAAE;IACvCP,QAAQ,EAAEI,YAAY,GAAGJ,QAAQ,GAAGE;EACtC,CAAC,CAAC;AACJ;AAEAM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGZ,KAAK,CAACa;AAC9C,yBACE;EACA;EACA;EACA;EACA;;EAEA;AACF;AACA;EACEX,QAAQ,EAAER,SAAS,CAACoB,IAAI;EAExB;AACF;AACA;AACA;AACA;EACEX,KAAK,EAAET,SAAS,CAACqB,IAAI;EAErB;AACF;AACA;AACA;EACEX,QAAQ,EAAEV,SAAS,CAACoB;AACtB,CAAC,GAAG,KAAK,CAAC;AAEV,IAAIJ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC;EACAZ,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC,GAAGL,SAAS,CAACK,KAAK,CAACa,SAAS,CAAC;AACtD;AAEA,eAAeb,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}