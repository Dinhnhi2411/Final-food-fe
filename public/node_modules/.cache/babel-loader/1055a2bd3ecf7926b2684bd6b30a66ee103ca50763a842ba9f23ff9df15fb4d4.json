{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport apiService from \"../../app/apiService\";\nimport { PER_PAGE } from \"../../app/config\";\nconst initialState = {\n  isLoading: false,\n  error: null,\n  productId: {},\n  carts: [],\n  page: 1\n};\nconst slice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    startLoading(state) {\n      state.isLoading = true;\n    },\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    getCartSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.carts = action.payload;\n    },\n    addCartSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      const newCart = action.payload;\n      state.productId[newCart._id] = newCart;\n    }\n  }\n});\nexport default slice.reducer;\nexport const {\n  clearCart\n} = slice.actions;\nexport const getCart = _ref => {\n  let {\n    page,\n    limit = PER_PAGE\n  } = _ref;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const params = {\n        page: page,\n        limit: limit\n      };\n      const response = await apiService.get(`/carts/me`, {\n        params\n      });\n      dispatch(slice.actions.getCartSuccess(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n      toast.error(error.message);\n    }\n  };\n};\nexport const addCart = _ref2 => {\n  let {\n    productId\n  } = _ref2;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await apiService.post(\"/carts/me\", {\n        productId\n      });\n      dispatch(slice.actions.addCartSuccess(response));\n      dispatch(getCart(response));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n    }\n  };\n};\nexport const updateCart = (id, amount) => async dispatch => {\n  dispatch(slice.actions.startLoading());\n  try {\n    const response = await apiService.put(`/carts/me/${id}`, {\n      amount\n    });\n    dispatch(getCart(response));\n  } catch (error) {\n    dispatch(slice.actions.hasError(error.message));\n  }\n};\nexport const deleteCart = id => async dispatch => {\n  dispatch(slice.actions.startLoading());\n  try {\n    const response = await apiService.delete(`/carts/me/${id}`);\n    dispatch(getCart(response));\n  } catch (error) {\n    dispatch(slice.actions.hasError(error.message));\n  }\n};","map":{"version":3,"names":["createSlice","toast","apiService","PER_PAGE","initialState","isLoading","error","productId","carts","page","slice","name","reducers","startLoading","state","hasError","action","payload","getCartSuccess","addCartSuccess","newCart","_id","reducer","clearCart","actions","getCart","limit","dispatch","params","response","get","data","message","addCart","post","updateCart","id","amount","put","deleteCart","delete"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/src/features/cart/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport apiService from \"../../app/apiService\";\r\nimport { PER_PAGE } from \"../../app/config\";\r\n\r\n\r\nconst initialState ={\r\n    isLoading: false,\r\n    error: null,\r\n    productId: {},\r\n    carts: [],\r\n    page:1,\r\n\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"cart\",\r\n    initialState,\r\n    reducers: {\r\n        startLoading(state) {\r\n            state.isLoading = true;\r\n        },\r\n        hasError(state, action) {\r\n            state.isLoading = false;\r\n            state.error = action.payload;\r\n        },\r\n        getCartSuccess(state, action) {\r\n            state.isLoading = false;\r\n            state.error = null;\r\n            state.carts = action.payload;\r\n        },\r\n        addCartSuccess(state, action) {\r\n            state.isLoading = false;\r\n            state.error = null;\r\n            const newCart = action.payload;\r\n            state.productId[newCart._id] = newCart;\r\n        },\r\n       \r\n    }\r\n});\r\n\r\nexport default slice.reducer;\r\nexport const {clearCart} = slice.actions;\r\nexport const getCart = ({ page, limit = PER_PAGE }) => async(dispatch)=>{\r\n    dispatch(slice.actions.startLoading());\r\n    try{\r\n        const params = { page:page, limit:limit}\r\n        const response = await apiService.get(`/carts/me`,{\r\n            params,\r\n        });\r\n        dispatch(slice.actions.getCartSuccess(response.data));\r\n\r\n    }catch(error) {\r\n        dispatch(slice.actions.hasError(error.message));\r\n        toast.error(error.message);\r\n    }\r\n};\r\n\r\nexport const addCart = ({ productId }) => async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n        const response = await apiService.post(\"/carts/me\", { productId\r\n        });\r\n        dispatch(slice.actions.addCartSuccess(response));\r\n        dispatch(getCart(response));\r\n    }catch(error) {\r\n        dispatch(slice.actions.hasError(error.message));\r\n    }\r\n};\r\n\r\n\r\nexport const updateCart = (id, amount) => async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n        const response = await apiService.put(`/carts/me/${id}`, {\r\n            amount\r\n        });\r\n        dispatch(getCart(response));\r\n    } catch (error) {\r\n        dispatch(slice.actions.hasError(error.message));\r\n    }\r\n};\r\n\r\n\r\nexport const deleteCart = (id) => async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n        const response = await apiService.delete(`/carts/me/${id}`);\r\n        dispatch(getCart(response));\r\n\r\n    } catch (error) {\r\n        dispatch(slice.actions.hasError(error.message));\r\n    }\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}