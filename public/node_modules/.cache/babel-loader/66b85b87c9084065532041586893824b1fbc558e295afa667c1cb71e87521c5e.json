{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-T-${value}`;\n}","map":{"version":3,"names":["React","PropTypes","jsx","_jsx","Context","createContext","process","env","NODE_ENV","displayName","useUniquePrefix","id","setId","useState","useEffect","Math","round","random","TabContext","props","children","value","idPrefix","context","useMemo","Provider","propTypes","node","string","isRequired","useTabContext","useContext","getPanelId","getTabId"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/node_modules/@mui/lab/TabContext/TabContext.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-T-${value}`;\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC;AACA;AACA;;AAEA,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,OAAO,GAAG,aAAaJ,KAAK,CAACK,aAAa,CAAC,IAAI,CAAC;AAEtD,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCJ,OAAO,CAACK,WAAW,GAAG,YAAY;AACpC;AAEA,SAASC,eAAe,GAAG;EACzB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,IAAI,CAAC;EACxCb,KAAK,CAACc,SAAS,CAAC,MAAM;IACpBF,KAAK,CAAE,SAAQG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAE,EAAC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EACN,OAAON,EAAE;AACX;AAEA,eAAe,SAASO,UAAU,CAACC,KAAK,EAAE;EACxC,MAAM;IACJC,QAAQ;IACRC;EACF,CAAC,GAAGF,KAAK;EACT,MAAMG,QAAQ,GAAGZ,eAAe,EAAE;EAClC,MAAMa,OAAO,GAAGvB,KAAK,CAACwB,OAAO,CAAC,MAAM;IAClC,OAAO;MACLF,QAAQ;MACRD;IACF,CAAC;EACH,CAAC,EAAE,CAACC,QAAQ,EAAED,KAAK,CAAC,CAAC;EACrB,OAAO,aAAalB,IAAI,CAACC,OAAO,CAACqB,QAAQ,EAAE;IACzCJ,KAAK,EAAEE,OAAO;IACdH,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;AACAd,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGU,UAAU,CAACQ;AACnD,yBACE;EACA;EACA;EACA;EACA;;EAEA;AACF;AACA;EACEN,QAAQ,EAAEnB,SAAS,CAAC0B,IAAI;EAExB;AACF;AACA;EACEN,KAAK,EAAEpB,SAAS,CAAC2B,MAAM,CAACC;AAC1B,CAAC,GAAG,KAAK,CAAC;AACV;AACA;AACA;;AAEA,OAAO,SAASC,aAAa,GAAG;EAC9B,OAAO9B,KAAK,CAAC+B,UAAU,CAAC3B,OAAO,CAAC;AAClC;AACA,OAAO,SAAS4B,UAAU,CAACT,OAAO,EAAEF,KAAK,EAAE;EACzC,MAAM;IACJC;EACF,CAAC,GAAGC,OAAO;EAEX,IAAID,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAO,IAAI;EACb;EAEA,OAAQ,GAAEC,OAAO,CAACD,QAAS,MAAKD,KAAM,EAAC;AACzC;AACA,OAAO,SAASY,QAAQ,CAACV,OAAO,EAAEF,KAAK,EAAE;EACvC,MAAM;IACJC;EACF,CAAC,GAAGC,OAAO;EAEX,IAAID,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAO,IAAI;EACb;EAEA,OAAQ,GAAEC,OAAO,CAACD,QAAS,MAAKD,KAAM,EAAC;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}