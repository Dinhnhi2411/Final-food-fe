{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Final-food\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FCheckbox, FormProvider, FTextField } from \"../components/form\";\n// import useAuth from \"../hooks/useAuth\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { useLocation, useNavigate, Link as RouterLink } from \"react-router-dom\";\nimport { Container } from \"@mui/system\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Alert, Box, Card, IconButton, InputAdornment, Link, Stack } from \"@mui/material\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\")\n});\nconst defaultValues = {\n  email: \"\",\n  password: \"\",\n  remember: true\n};\nfunction LoginPage() {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  // const auth = useAuth();\n  let navigate = useNavigate();\n  let location = useLocation();\n  const methods = useForm({\n    resolver: yupResolver(loginSchema),\n    defaultValues\n  });\n  const {\n    handleSubmit,\n    reset,\n    setError,\n    formState: {\n      errors,\n      isSubmiting\n    }\n  } = methods;\n  const onSubmit = async data => {\n    // const from = location.state?.from?.pathname || \"/\";\n    // let { email, password } = data;\n    // console.log(\"auth\", auth);\n    // try {\n    //   await auth.login({ email, password }, () => {\n    //     navigate(from, { replace: true });\n    //   });\n    // } catch (error) {\n    //   reset();\n    //   setError(\"responeError\", error);\n    // }\n    console.log(\"onSubmit\");\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    color: \"primary\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(FormProvider, {\n      methods: methods,\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [!!errors.responeError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: [\" \", errors.responeError.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: [\"Don't have account? \", \"\", /*#__PURE__*/_jsxDEV(Link, {\n            variant: \"subtitle2\",\n            component: RouterLink,\n            to: \"/register\",\n            children: \"Get start!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FTextField, {\n          name: \"email\",\n          label: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FTextField, {\n          name: \"password\",\n          label: \"Password\",\n          type: showPassword ? \"text\" : \"password\",\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setShowPassword(!showPassword),\n                egde: \"end\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        sx: {\n          my: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(FCheckbox, {\n          name: \"remember\",\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          component: RouterLink,\n          variant: \"subtitle2\",\n          to: \"/\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmiting,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"NVaiRswTwbRhJXnswtZIeqQCfxo=\", false, function () {\n  return [useNavigate, useLocation, useForm];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","FCheckbox","FormProvider","FTextField","useForm","yupResolver","Yup","useLocation","useNavigate","Link","RouterLink","Container","LoadingButton","Alert","Box","Card","IconButton","InputAdornment","Stack","VisibilityIcon","VisibilityOffIcon","loginSchema","object","shape","email","string","required","password","defaultValues","remember","LoginPage","showPassword","setShowPassword","navigate","location","methods","resolver","handleSubmit","reset","setError","formState","errors","isSubmiting","onSubmit","data","console","log","responeError","message","endAdornment","my"],"sources":["D:/Github/Final-food/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { FCheckbox, FormProvider, FTextField } from \"../components/form\";\r\n// import useAuth from \"../hooks/useAuth\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport { useLocation, useNavigate, Link as RouterLink } from \"react-router-dom\";\r\nimport { Container } from \"@mui/system\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Alert, Box, Card, IconButton, InputAdornment, Link, Stack } from \"@mui/material\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst defaultValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n  remember: true,\r\n};\r\nfunction LoginPage() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  // const auth = useAuth();\r\n  let navigate = useNavigate();\r\n  let location = useLocation();\r\n  const methods = useForm({\r\n    resolver: yupResolver(loginSchema),\r\n    defaultValues,\r\n  });\r\n  const {\r\n    handleSubmit,\r\n    reset,\r\n    setError,\r\n    formState: { errors, isSubmiting },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    // const from = location.state?.from?.pathname || \"/\";\r\n    // let { email, password } = data;\r\n    // console.log(\"auth\", auth);\r\n    // try {\r\n    //   await auth.login({ email, password }, () => {\r\n    //     navigate(from, { replace: true });\r\n    //   });\r\n    // } catch (error) {\r\n    //   reset();\r\n    //   setError(\"responeError\", error);\r\n    // }\r\n    console.log(\"onSubmit\")\r\n  };\r\n\r\n  return (\r\n    <Card\r\n    color=\"primary\"\r\n    maxWidth=\"xs\"\r\n   \r\n    >\r\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3}>\r\n          {!!errors.responeError && (\r\n            <Alert severity=\"error\"> {errors.responeError.message}</Alert>\r\n          )}\r\n          <Alert severity=\"info\">\r\n            Don't have account? {\"\"}\r\n            <Link variant=\"subtitle2\" component={RouterLink} to=\"/register\">\r\n              Get start!\r\n            </Link>\r\n          </Alert>\r\n\r\n          <FTextField name=\"email\" label=\"Email address\" />\r\n          <FTextField\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    egde=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          sx={{ my: 2 }}\r\n        >\r\n          <FCheckbox name=\"remember\" label=\"Remember me\" />\r\n          <Link component={RouterLink} variant=\"subtitle2\" to=\"/\">\r\n            Forgot password?\r\n          </Link>\r\n        </Stack>\r\n\r\n        <LoadingButton\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          loading={isSubmiting}\r\n        >\r\n          Login\r\n        </LoadingButton>\r\n         \r\n      </FormProvider>\r\n    </Card>\r\n  );\r\n\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}