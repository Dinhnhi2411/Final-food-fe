{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport apiService from \"../../app/apiService\";\nimport { cloudinaryUpload } from \"../../utils/cloudinary\";\nconst initialState = {\n  isLoading: false,\n  error: null,\n  updatedProfile: null,\n  selectedUser: null\n};\nconst slice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    startLoading(state) {\n      state.isLoading = true;\n    },\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    updateUserProfileSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      const updateUser = action.payload;\n      state.updatedProfile = updateUser;\n    },\n    getUserSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.selectedUser = action.payload;\n    }\n  }\n});\nexport default slice.reducer;\nexport const getUser = id => async dispatch => {\n  dispatch(slice.actions.startLoading());\n  try {\n    const response = await apiService.get(`/users/${id}`);\n    dispatch(slice.actions.getUserSucess(response.data));\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n    toast.error(error.message);\n  }\n};\nexport const getCurrentUserProfile = () => async dispatch => {\n  dispatch(slice.actions.startLoading());\n  try {\n    const response = await apiService.get(`/users/me`);\n    dispatch(slice.actions.updateUserProfileSuccess(response.data));\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n  }\n};\nexport const updateUserProfile = _ref => {\n  let {\n    userId,\n    name,\n    avatarUrl,\n    address,\n    city,\n    country,\n    phone\n  } = _ref;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const data = {\n        name,\n        avatarUrl,\n        address,\n        city,\n        country,\n        phone\n      };\n      if (avatarUrl instanceof File) {\n        const imageUrl = await cloudinaryUpload(avatarUrl);\n        data.avatarUrl = imageUrl;\n      }\n      const response = await apiService.put(`/users/customer/${userId}`, data);\n      dispatch(slice.actions.updateUserProfileSuccess(response.data));\n      toast.success(\"Update Profile Sucessfully\");\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n      toast.error(error.message);\n    }\n  };\n};","map":{"version":3,"names":["createSlice","toast","apiService","cloudinaryUpload","initialState","isLoading","error","updatedProfile","selectedUser","slice","name","reducers","startLoading","state","hasError","action","payload","updateUserProfileSuccess","updateUser","getUserSuccess","reducer","getUser","id","dispatch","actions","response","get","getUserSucess","data","message","getCurrentUserProfile","updateUserProfile","userId","avatarUrl","address","city","country","phone","File","imageUrl","put","success"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/src/features/user/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport apiService from \"../../app/apiService\";\r\nimport { cloudinaryUpload } from \"../../utils/cloudinary\";\r\n\r\n\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  updatedProfile: null,\r\n  selectedUser: null,\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers: {\r\n        startLoading(state) {\r\n            state.isLoading = true;\r\n        },\r\n        hasError(state, action ) {\r\n            state.isLoading = false;\r\n            state.error = action.payload;\r\n        },\r\n        updateUserProfileSuccess(state, action) {\r\n            state.isLoading = false;\r\n            state.error = null;\r\n\r\n            const updateUser = action.payload;\r\n            state.updatedProfile = updateUser;\r\n        },\r\n        getUserSuccess(state, action) {\r\n            state.isLoading = false;\r\n            state.error = null;\r\n\r\n            state.selectedUser = action.payload;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getUser = (id) => async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n        const response = await apiService.get(`/users/${id}`);\r\n        dispatch(slice.actions.getUserSucess(response.data));\r\n    } catch(error) {\r\n        dispatch(slice.actions.hasError(error));\r\n        toast.error(error.message);\r\n    }\r\n};\r\n\r\nexport const getCurrentUserProfile = () => async(dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n        const response = await apiService.get(`/users/me`);\r\n        dispatch(slice.actions.updateUserProfileSuccess(response.data));\r\n    }catch(error) {\r\n        dispatch(slice.actions.hasError(error));\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = ({\r\n    userId,\r\n    name,\r\n    avatarUrl,\r\n    address,\r\n    city,\r\n    country,\r\n    phone\r\n}) => async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n        const data = {\r\n            name,\r\n            avatarUrl,\r\n            address,\r\n            city,\r\n            country,\r\n            phone\r\n        };\r\n        if(avatarUrl instanceof File) {\r\n            const imageUrl = await cloudinaryUpload(avatarUrl);\r\n            data.avatarUrl = imageUrl;\r\n        }\r\n        const response = await apiService.put(`/users/customer/${userId}`, data);\r\n        dispatch(slice.actions.updateUserProfileSuccess(response.data));\r\n        toast.success(\"Update Profile Sucessfully\")\r\n    } catch(error) {\r\n        dispatch(slice.actions.hasError(error.message));\r\n        toast.error(error.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}