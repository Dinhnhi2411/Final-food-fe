{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gitlab\\\\dinhngocliennhi1999_frontend\\\\src\\\\pages\\\\DetailProduct.js\",\n  _s = $RefreshSig$();\nimport { Alert, Box, Breadcrumbs, Button, Card, Divider, Grid, Rating, Stack, Typography } from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\n// import { getSingleProducts } from \"../features/product/productSlice\";\nimport useAuth from \"../hooks/useAuth\";\nimport { Link as RouterLink, useParams } from \"react-router-dom\";\nimport LoadingScreen from \"../components/loadingScreen/LoadingScreen\";\nimport { fNumber } from \"../utils/numberFormat\";\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport apiService from \"../app/apiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DetailProduct() {\n  _s();\n  const [open, setOpen] = useState(false);\n  // const { product, isLoading, error } = useSelector(\n  //   (state) => state.product\n  // );\n  const [product, setProduct] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [img, setImg] = useState(\"\");\n  const [border, setBorder] = useState();\n  const dispatch = useDispatch();\n  const params = useParams();\n  const id = params.id;\n  const navigate = useNavigate();\n  let {\n    user\n  } = useAuth();\n\n  // useEffect(() => {\n  //   dispatch(getSingleProducts(id));\n  // }, [dispatch, id]);\n\n  useEffect(() => {\n    const getSingleProducts = async () => {\n      setLoading(true);\n      try {\n        const res = await apiService.get(`/products/public/${id}`);\n        // console.log(res.data)\n        console.log(\"product\", product);\n        setProduct(res.data);\n        setError(\"\");\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n      }\n      setLoading(false);\n    };\n    getSingleProducts();\n  }, []);\n  const handleAddToCart = () => {\n    if (!user) {\n      navigate(\"/login\");\n    }\n    dispatch();\n  };\n  const handleOrderNow = () => {\n    handleAddToCart();\n    setTimeout(() => {\n      navigate(\"/cart\");\n    }, 1000);\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClickImage = (image, index) => {\n    setImg(image);\n    setBorder(index);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      my: 3\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(DetailProduct, \"6armF1+sCuwUcYzG9gX5GMGjclY=\", false, function () {\n  return [useDispatch, useParams, useNavigate, useAuth];\n});\n_c = DetailProduct;\nexport default DetailProduct;\n\n// import React from 'react'\n\n// function DetailProduct() {\n//   return (\n//     <div>\n//       <h1>Detail Product</h1>\n//     </div>\n//   )\n// }\n\n// export default DetailProduct\nvar _c;\n$RefreshReg$(_c, \"DetailProduct\");","map":{"version":3,"names":["Alert","Box","Breadcrumbs","Button","Card","Divider","Grid","Rating","Stack","Typography","Container","React","useEffect","useState","useDispatch","useSelector","Link","useNavigate","useAuth","RouterLink","useParams","LoadingScreen","fNumber","AddShoppingCartIcon","ShoppingCartIcon","apiService","DetailProduct","open","setOpen","product","setProduct","loading","setLoading","error","setError","img","setImg","border","setBorder","dispatch","params","id","navigate","user","getSingleProducts","res","get","console","log","data","message","handleAddToCart","handleOrderNow","setTimeout","handleClickOpen","handleClickImage","image","index","my"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/src/pages/DetailProduct.js"],"sourcesContent":["import { Alert, Box, Breadcrumbs, Button, Card, Divider, Grid, Rating, Stack, Typography } from \"@mui/material\";\r\nimport { Container } from \"@mui/system\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n// import { getSingleProducts } from \"../features/product/productSlice\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { Link as RouterLink, useParams } from \"react-router-dom\";\r\nimport LoadingScreen from \"../components/loadingScreen/LoadingScreen\";\r\nimport { fNumber } from \"../utils/numberFormat\";\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport apiService from \"../app/apiService\";\r\n\r\n\r\nfunction DetailProduct() {\r\n  const [open, setOpen] = useState(false);\r\n  // const { product, isLoading, error } = useSelector(\r\n  //   (state) => state.product\r\n  // );\r\n  const [ product, setProduct] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [ error, setError] = useState(\"\");\r\n  const [img, setImg] = useState(\"\");\r\n  const [border, setBorder] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const id = params.id;\r\n  const navigate = useNavigate();\r\n  let { user } = useAuth();\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getSingleProducts(id));\r\n  // }, [dispatch, id]);\r\n\r\n   useEffect(() => {\r\n    const getSingleProducts = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await apiService.get(`/products/public/${id}`);\r\n        // console.log(res.data)\r\n        console.log(\"product\", product)\r\n        setProduct(res.data);\r\n        setError(\"\");\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(error.message);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    getSingleProducts();\r\n  }, []);\r\n\r\n  const handleAddToCart = () => {\r\n    if (!user) {\r\n      navigate(\"/login\");\r\n    }\r\n    dispatch();\r\n  };\r\n\r\n  const handleOrderNow = () => {\r\n    handleAddToCart();\r\n    setTimeout(() => {\r\n      navigate(\"/cart\");\r\n    }, 1000);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClickImage = (image, index) => {\r\n    setImg(image);\r\n    setBorder(index);\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ my: 3 }}>\r\n      {/* {<DialogCantBy open={open} setOpen={setOpen} />} */}\r\n      {/* <Breadcrumbs\r\n        aria-label=\"breadcrumb\"\r\n        sx={{ mt: { xs: 5, md: 10 }, mb: { xs: 1, md: 2 } }}\r\n      >\r\n        <Link underline=\"hover\" color=\"inherit\" component={RouterLink} to=\"/store\">\r\n          Store Food\r\n        </Link> */}\r\n        {/* <Typography color=\"text.primary\">\r\n          {product.productName}\r\n        </Typography>\r\n      </Breadcrumbs>\r\n      <Box sx={{ position: \"relative\", height: 1 }}>\r\n        {loading ? (\r\n          <LoadingScreen />\r\n        ) : (\r\n          <>\r\n            {error ? (\r\n              <Alert severity=\"error\">{error}</Alert>\r\n            ) : (\r\n              <>\r\n                {product && (\r\n                  <Card sx={{ p: 2 }}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Box p={2}>\r\n                          <Box\r\n                            sx={{\r\n                              width: { xs: 280, md: 350, lg: 460 },\r\n                              height: { xs: 280, md: 350, lg: 460 },\r\n                              overflow: \"hidden\",\r\n                              display: \"flex\",\r\n                            }}\r\n                          >\r\n                            <Card\r\n                              component=\"img\"\r\n                              src={!img ? product.image[0] : img}\r\n                              alt=\"product\"\r\n                            />\r\n                          </Box>\r\n\r\n                          {product.image.map((img, index) =>\r\n                            index === border ? (\r\n                              <Box\r\n                                onClick={() => {\r\n                                  handleClickImage(img, index);\r\n                                }}\r\n                                component=\"img\"\r\n                                sx={{\r\n                                  width: 70,\r\n                                  height: 70,\r\n                                  ml: 1,\r\n                                  mt: 2,\r\n                                  borderRadius: 0.5,\r\n                                  border: \"1px solid blue\",\r\n                                }}\r\n                                src={img}\r\n                                alt=\"product\"\r\n                              />\r\n                            ) : (\r\n                              <Box\r\n                                onClick={() => {\r\n                                  handleClickImage(img, index);\r\n                                }}\r\n                                component=\"img\"\r\n                                sx={{\r\n                                  width: 70,\r\n                                  height: 70,\r\n                                  ml: 1,\r\n                                  mt: 2,\r\n                                  borderRadius: 0.5,\r\n                                }}\r\n                                src={img}\r\n                                alt=\"product\"\r\n                              />\r\n                            )\r\n                          )}\r\n                        </Box>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} md={6}>\r\n                        <Typography\r\n                          sx={{\r\n                            mb: 1,\r\n                            display: \"block\",\r\n                            textTransform: \"uppercase\",\r\n                            color:\r\n                              product.status === \"sale\"\r\n                                ? \"error.main\"\r\n                                : \"info.main\",\r\n                          }}\r\n                        >\r\n                          {product.status}\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          sx={{\r\n                            font: { xs: 16, md: 23 },\r\n                            fontWeight: 600,\r\n                          }}\r\n                        >\r\n                          {product.productName}\r\n                        </Typography>\r\n\r\n                        <Rating\r\n                          value={product.rating}\r\n                          precision={0.1}\r\n                          readOnly\r\n                        />\r\n\r\n                        <Stack\r\n                          direction=\"row\"\r\n                          alignItems=\"center\"\r\n                          spacing={1}\r\n                        ></Stack>\r\n                        <Divider sx={{ borderStyle: \"dashed\", mb: 2 }} />\r\n                        <Typography\r\n                          sx={{\r\n                            mb: 1,\r\n                            color: \"red\",\r\n                            font: { xs: 16, md: 23 },\r\n                            fontWeight: 600,\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          Price:\r\n                          <Box\r\n                            component=\"span\"\r\n                            sx={{\r\n                              color: \"text.disabled\",\r\n                              textDecoration: \"line-through\",\r\n                            }}\r\n                          >\r\n                            {product.priceSale &&\r\n                              fNumber(product.priceSale)}\r\n                            đ\r\n                          </Box>\r\n                          &nbsp;{fNumber(product.price)}đ\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          sx={{\r\n                            mb: 1,\r\n                            font: { xs: 16, md: 23 },\r\n                            fontWeight: 600,\r\n                          }}\r\n                        >\r\n                          Unit: {product.unit}\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          sx={{\r\n                            mb: 3,\r\n                            font: { xs: 16, md: 23 },\r\n                            fontWeight: 600,\r\n                          }}\r\n                        >\r\n                          Shop: {product.author.shopName}\r\n                        </Typography>\r\n\r\n                        <Typography sx={{ font: { xs: 16, md: 23 } }}>\r\n                          {product.describe}\r\n                        </Typography>\r\n\r\n                        <Stack direction=\"row\" spacing={2} sx={{ mt: 5 }}>\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            startIcon={<ShoppingCartIcon />}\r\n                            onClick={() => {\r\n                              if (!user) {\r\n                                navigate(\"/login\");\r\n                              } else {\r\n                                user._id === product.author._id\r\n                                  ? handleClickOpen()\r\n                                  : handleOrderNow();\r\n                              }\r\n                            }}\r\n                          >\r\n                            Order now\r\n                          </Button>\r\n\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            startIcon={<AddShoppingCartIcon />}\r\n                            onClick={() => {\r\n                              if (!user) {\r\n                                navigate(\"/login\");\r\n                              } else {\r\n                                user._id === product.author._id\r\n                                  ? handleClickOpen()\r\n                                  : handleAddToCart();\r\n                              }\r\n                            }}\r\n                          >\r\n                            Add Shopping Cart\r\n                          </Button>\r\n                        </Stack>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Card>\r\n                )}\r\n                {!product && (\r\n                  <Typography variant=\"h6\">404 Product not found</Typography>\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Box>\r\n      <Box sx={{ mb: 10 }}></Box> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DetailProduct;\r\n\r\n// import React from 'react'\r\n\r\n// function DetailProduct() {\r\n//   return (\r\n//     <div>\r\n//       <h1>Detail Product</h1>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default DetailProduct\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}