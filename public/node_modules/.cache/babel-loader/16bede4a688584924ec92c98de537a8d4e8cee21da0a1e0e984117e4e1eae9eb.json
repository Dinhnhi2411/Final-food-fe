{"ast":null,"code":"'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n  constructor(tokenizer, opts) {\n    super(tokenizer, opts);\n    const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n    this.posTracker = preprocessorMixin.posTracker;\n  }\n}\nmodule.exports = ErrorReportingTokenizerMixin;","map":{"version":3,"names":["ErrorReportingMixinBase","require","ErrorReportingPreprocessorMixin","Mixin","ErrorReportingTokenizerMixin","constructor","tokenizer","opts","preprocessorMixin","install","preprocessor","posTracker","module","exports"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js"],"sourcesContent":["'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n    constructor(tokenizer, opts) {\n        super(tokenizer, opts);\n\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n\n        this.posTracker = preprocessorMixin.posTracker;\n    }\n}\n\nmodule.exports = ErrorReportingTokenizerMixin;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,uBAAuB,GAAGC,OAAO,CAAC,cAAc,CAAC;AACvD,MAAMC,+BAA+B,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AACvE,MAAME,KAAK,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAE1C,MAAMG,4BAA4B,SAASJ,uBAAuB,CAAC;EAC/DK,WAAW,CAACC,SAAS,EAAEC,IAAI,EAAE;IACzB,KAAK,CAACD,SAAS,EAAEC,IAAI,CAAC;IAEtB,MAAMC,iBAAiB,GAAGL,KAAK,CAACM,OAAO,CAACH,SAAS,CAACI,YAAY,EAAER,+BAA+B,EAAEK,IAAI,CAAC;IAEtG,IAAI,CAACI,UAAU,GAAGH,iBAAiB,CAACG,UAAU;EAClD;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAGT,4BAA4B"},"metadata":{},"sourceType":"script","externalDependencies":[]}