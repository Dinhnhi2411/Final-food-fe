{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport apiService from \"../../app/apiService\";\nimport { cloudinaryUpload } from \"../../utils/cloudinary\";\nconst initialState = {\n  isLoading: false,\n  error: null,\n  updatedProfile: null,\n  selectedUser: null,\n  users: [],\n  totalPage: 0,\n  totalUsers: 0,\n  currentPage: 1,\n  filters: {}\n};\nconst slice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    startLoading(state) {\n      state.isLoading = true;\n    },\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    updateUserProfileSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      const updateUser = action.payload;\n      state.updatedProfile = updateUser;\n    },\n    getUserSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.selectedUser = action.payload;\n    },\n    deactiveUserSuccess(state) {\n      state.isLoading = false;\n      state.error = null;\n    },\n    updateUserSuccess(state) {\n      state.isLoading = false;\n      state.error = null;\n    },\n    getUserListSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.totalUsers = action.payload.count;\n      state.users = action.payload.users;\n      state.currentPage = action.payload.page;\n      state.totalPage = action.payload.totalPage;\n    },\n    handleChangeUserFilters(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    handleClearUserFilters(state) {\n      state.isLoading = false;\n      state.error = null;\n      state.filters = {};\n    }\n  }\n});\nexport default slice.reducer;\nexport const {\n  getUserListSuccess,\n  deactiveUserSuccess,\n  updateUserSuccess,\n  handleChangeUserFilters,\n  handleClearUserFilters\n} = slice.actions;\nexport const getUser = id => async dispatch => {\n  dispatch(slice.actions.startLoading());\n  try {\n    const response = await apiService.get(`/users/${id}`);\n    dispatch(slice.actions.getUserSucess(response.data));\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n    toast.error(error.message);\n  }\n};\nexport const getCurrentUserProfile = () => async dispatch => {\n  dispatch(slice.actions.startLoading());\n  try {\n    const response = await apiService.get(`/users/me`);\n    dispatch(slice.actions.updateUserProfileSuccess(response.data));\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n  }\n};\nexport const updateUserProfile = _ref => {\n  let {\n    userId,\n    name,\n    avatarUrl,\n    address,\n    city,\n    country,\n    phone\n  } = _ref;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const data = {\n        name,\n        avatarUrl,\n        address,\n        city,\n        country,\n        phone\n      };\n      if (avatarUrl instanceof File) {\n        const imageUrl = await cloudinaryUpload(avatarUrl);\n        data.avatarUrl = imageUrl;\n      }\n      const response = await apiService.put(`/users/customer/${userId}`, {\n        ...data\n      });\n      dispatch(slice.actions.updateUserProfileSuccess(response.data));\n      dispatch(getCurrentUserProfile());\n      toast.success(\"Update Profile Sucessfully\");\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n      toast.error(error.message);\n    }\n  };\n};\nexport const getUserList = filters => async (dispatch, getState) => {\n  dispatch(slice.actions.startLoading());\n  try {\n    filters = {\n      ...filters,\n      ...getState().user.filters\n    };\n    const response = await apiService.get(\"/users\", {\n      params: filters\n    });\n    dispatch(getUserListSuccess(response.data));\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n  }\n};\nexport const deactiveUser = (id, filters) => async dispatch => {\n  dispatch(slice.actions.startLoading());\n  try {\n    const repsonse = await apiService.delete(`/users/delete/${id}`);\n    if (repsonse) {\n      dispatch(deactiveUserSuccess());\n      dispatch(getUserList(filters));\n    }\n    toast.success(\"You are deactive user sucessfully!\");\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n    toast.error(error.message);\n  }\n};\nexport const updateUser = (id, updateContent, filters) => async dispatch => {\n  dispatch(slice.actions.startLoading());\n  try {\n    const repsonse = await apiService.put(`/users/update/${id}`, {\n      ...updateContent\n    });\n    if (repsonse) {\n      dispatch(updateUserSuccess());\n      dispatch(getUserList(filters));\n      toast.success(\"You are updated user sucessfully!\");\n    }\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n    toast.error(error.message);\n  }\n};","map":{"version":3,"names":["createSlice","toast","apiService","cloudinaryUpload","initialState","isLoading","error","updatedProfile","selectedUser","users","totalPage","totalUsers","currentPage","filters","slice","name","reducers","startLoading","state","hasError","action","payload","updateUserProfileSuccess","updateUser","getUserSuccess","deactiveUserSuccess","updateUserSuccess","getUserListSuccess","count","page","handleChangeUserFilters","handleClearUserFilters","reducer","actions","getUser","id","dispatch","response","get","getUserSucess","data","message","getCurrentUserProfile","updateUserProfile","userId","avatarUrl","address","city","country","phone","File","imageUrl","put","success","getUserList","getState","user","params","deactiveUser","repsonse","delete","updateContent"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/src/features/user/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport apiService from \"../../app/apiService\";\r\nimport { cloudinaryUpload } from \"../../utils/cloudinary\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  updatedProfile: null,\r\n  selectedUser: null,\r\n  users:[],\r\n  totalPage:0,\r\n  totalUsers:0,\r\n  currentPage:1,\r\n  filters: {},\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    updateUserProfileSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n\r\n      const updateUser = action.payload;\r\n      state.updatedProfile = updateUser;\r\n    },\r\n    getUserSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n\r\n      state.selectedUser = action.payload;\r\n    },\r\n     deactiveUserSuccess(state) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n      updateUserSuccess(state) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    getUserListSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.totalUsers = action.payload.count;\r\n      state.users = action.payload.users;\r\n   \r\n      state.currentPage = action.payload.page;\r\n      state.totalPage = action.payload.totalPage\r\n    },\r\n     handleChangeUserFilters(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.filters = { ...state.filters, ...action.payload };\r\n    },\r\n     handleClearUserFilters(state) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.filters = {};\r\n    },\r\n\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nexport const {\r\n  \r\n \r\n  getUserListSuccess,\r\n  deactiveUserSuccess,\r\n  updateUserSuccess,\r\n  handleChangeUserFilters,\r\n  handleClearUserFilters,\r\n} = slice.actions;\r\n\r\n\r\nexport const getUser = (id) => async (dispatch) => {\r\n  dispatch(slice.actions.startLoading());\r\n  try {\r\n    const response = await apiService.get(`/users/${id}`);\r\n    dispatch(slice.actions.getUserSucess(response.data));\r\n  } catch (error) {\r\n    dispatch(slice.actions.hasError(error));\r\n    toast.error(error.message);\r\n  }\r\n};\r\n\r\nexport const getCurrentUserProfile = () => async (dispatch) => {\r\n  dispatch(slice.actions.startLoading());\r\n  try {\r\n    const response = await apiService.get(`/users/me`);\r\n    dispatch(slice.actions.updateUserProfileSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(slice.actions.hasError(error));\r\n  }\r\n};\r\n\r\nexport const updateUserProfile =\r\n  ({ userId, name, avatarUrl, address, city, country, phone }) =>\r\n  async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const data = {\r\n        name,\r\n        avatarUrl,\r\n        address,\r\n        city,\r\n        country,\r\n        phone,\r\n      };\r\n      if (avatarUrl instanceof File) {\r\n        const imageUrl = await cloudinaryUpload(avatarUrl);\r\n        data.avatarUrl = imageUrl;\r\n      }\r\n      const response = await apiService.put(`/users/customer/${userId}`,{...data});\r\n      dispatch(slice.actions.updateUserProfileSuccess(response.data));\r\n      dispatch(getCurrentUserProfile());\r\n      toast.success(\"Update Profile Sucessfully\");\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error.message));\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n\r\n  export const getUserList = (filters) => async (dispatch, getState) => {\r\n  dispatch(slice.actions.startLoading());\r\n  try {\r\n    filters = { ...filters, ...getState().user.filters };\r\n\r\n    const response = await apiService.get(\"/users\", { params: filters });\r\n    dispatch(getUserListSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(slice.actions.hasError(error));\r\n  }\r\n};\r\n\r\nexport const deactiveUser = (id, filters) => async (dispatch) => {\r\n  dispatch(slice.actions.startLoading());\r\n  try {\r\n    const repsonse = await apiService.delete(`/users/delete/${id}`);\r\n    if (repsonse) {\r\n      dispatch(deactiveUserSuccess());\r\n      dispatch(getUserList(filters));\r\n    }\r\n    toast.success(\"You are deactive user sucessfully!\");\r\n  } catch (error) {\r\n    dispatch(slice.actions.hasError(error));\r\n    toast.error(error.message);\r\n  }\r\n};\r\n\r\nexport const updateUser = (id, updateContent, filters) => async (dispatch) => {\r\n  dispatch(slice.actions.startLoading());\r\n  try {\r\n    const repsonse = await apiService.put(`/users/update/${id}`, {\r\n      ...updateContent,\r\n    });\r\n    if (repsonse) {\r\n      dispatch(updateUserSuccess());\r\n\r\n      dispatch(getUserList(filters));\r\n\r\n      toast.success(\"You are updated user sucessfully!\");\r\n    }\r\n  } catch (error) {\r\n    dispatch(slice.actions.hasError(error));\r\n    toast.error(error.message);\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}