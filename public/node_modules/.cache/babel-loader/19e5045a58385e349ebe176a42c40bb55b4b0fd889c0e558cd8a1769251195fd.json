{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gitlab\\\\dinhngocliennhi1999_frontend\\\\src\\\\pages\\\\DashBoard\\\\EditOrderPage.js\",\n  _s = $RefreshSig$();\nimport { Box, Stack, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { Button } from \"react-scroll\";\nimport FormProvider from \"../../components/form/FormProvider\";\nimport Iconify from \"../../components/Iconify/Iconify\";\nimport { TitleStyle } from \"../../theme/customizations/TitleStyle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  status: \"\",\n  statusUpdate: \"pending\",\n  delivery: [null, null]\n};\nexport default function EditOrderPage() {\n  _s();\n  const dispatch = useDispatch();\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const methods = useForm({\n    defaultValues,\n    mode: \"onChange\"\n  });\n  const {\n    handleSubmit,\n    reset,\n    watch\n  } = methods;\n  const onSubmit = data => {\n    const filters = {\n      page: page + 1,\n      limit: rowsPerPage\n    };\n    // dispatch(\n    //   updateOrderDashboard(\n    //     {\n    //       orderIds: selected,\n    //       status: data.statusUpdate,\n    //     },\n    //     filters\n    //   )\n    // );\n    // setSelected([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    methods: methods,\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      sx: {\n        py: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TitleStyle, {\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: \"icon-park-solid:transaction-order\",\n          width: 35,\n          height: 35\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          textAlign: \"left\",\n          sx: {\n            pl: 1\n          },\n          children: \"ORDER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outlined\",\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(EditOrderPage, \"3/J28SmRA9KXP+gc46adPUHkit8=\", false, function () {\n  return [useDispatch, useForm];\n});\n_c = EditOrderPage;\nvar _c;\n$RefreshReg$(_c, \"EditOrderPage\");","map":{"version":3,"names":["Box","Stack","Typography","useState","useForm","useDispatch","Button","FormProvider","Iconify","TitleStyle","defaultValues","status","statusUpdate","delivery","EditOrderPage","dispatch","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","methods","mode","handleSubmit","reset","watch","onSubmit","data","filters","limit","py","pl"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/src/pages/DashBoard/EditOrderPage.js"],"sourcesContent":["import { Box, Stack, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button } from \"react-scroll\";\r\nimport FormProvider from \"../../components/form/FormProvider\";\r\nimport Iconify from \"../../components/Iconify/Iconify\";\r\nimport { TitleStyle } from \"../../theme/customizations/TitleStyle\";\r\n\r\n\r\n\r\nconst defaultValues = {\r\n  status: \"\",\r\n  statusUpdate: \"pending\",\r\n  delivery: [null, null],\r\n};\r\n\r\nexport default function EditOrderPage() {\r\n  const dispatch = useDispatch();\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n const methods = useForm({ defaultValues, mode: \"onChange\" });\r\n const { handleSubmit, reset, watch } = methods;\r\n\r\nconst onSubmit = (data) => {\r\n    const filters = { page: page + 1, limit: rowsPerPage };\r\n    // dispatch(\r\n    //   updateOrderDashboard(\r\n    //     {\r\n    //       orderIds: selected,\r\n    //       status: data.statusUpdate,\r\n    //     },\r\n    //     filters\r\n    //   )\r\n    // );\r\n    // setSelected([]);\r\n  };\r\n\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ py: 2 }}\r\n      >\r\n        <TitleStyle>\r\n          <Iconify\r\n            icon={\"icon-park-solid:transaction-order\"}\r\n            width={35}\r\n            height={35}\r\n          />\r\n          <Typography variant=\"h6\" textAlign=\"left\" sx={{ pl: 1 }}>\r\n            ORDER\r\n          </Typography>\r\n        </TitleStyle>\r\n        <Box>\r\n          <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Stack>\r\n\r\n      <Box>\r\n        {/* <OrderTable\r\n          reset={reset}\r\n          watch={watch}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          page={page}\r\n          setPage={setPage}\r\n          rowsPerPage={rowsPerPage}\r\n          setRowsPerPage={setRowsPerPage}\r\n        /> */}\r\n      </Box>\r\n    </FormProvider>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AACtD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,cAAc;AACrC,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,OAAOC,OAAO,MAAM,kCAAkC;AACtD,SAASC,UAAU,QAAQ,uCAAuC;AAAC;AAInE,MAAMC,aAAa,GAAG;EACpBC,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE,SAAS;EACvBC,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI;AACvB,CAAC;AAED,eAAe,SAASC,aAAa,GAAG;EAAA;EACtC,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAElD,MAAMmB,OAAO,GAAGlB,OAAO,CAAC;IAAEM,aAAa;IAAEa,IAAI,EAAE;EAAW,CAAC,CAAC;EAC5D,MAAM;IAAEC,YAAY;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGJ,OAAO;EAE/C,MAAMK,QAAQ,GAAIC,IAAI,IAAK;IACvB,MAAMC,OAAO,GAAG;MAAEX,IAAI,EAAEA,IAAI,GAAG,CAAC;MAAEY,KAAK,EAAEV;IAAY,CAAC;IACtD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAGD,oBACE,QAAC,YAAY;IAAC,OAAO,EAAEE,OAAQ;IAAC,QAAQ,EAAEE,YAAY,CAACG,QAAQ,CAAE;IAAA,wBAC/D,QAAC,KAAK;MACJ,SAAS,EAAC,KAAK;MACf,UAAU,EAAC,QAAQ;MACnB,cAAc,EAAC,eAAe;MAC9B,EAAE,EAAE;QAAEI,EAAE,EAAE;MAAE,CAAE;MAAA,wBAEd,QAAC,UAAU;QAAA,wBACT,QAAC,OAAO;UACN,IAAI,EAAE,mCAAoC;UAC1C,KAAK,EAAE,EAAG;UACV,MAAM,EAAE;QAAG;UAAA;UAAA;UAAA;QAAA,QACX,eACF,QAAC,UAAU;UAAC,OAAO,EAAC,IAAI;UAAC,SAAS,EAAC,MAAM;UAAC,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE3C;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eACb,QAAC,GAAG;QAAA,uBACF,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAC,UAAU;UAAC,KAAK,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAE/C;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eAER,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAWE;EAAA;IAAA;IAAA;IAAA;EAAA,QACO;AAEnB;AAAC,GA/DuBlB,aAAa;EAAA,QAClBT,WAAW,EAKbD,OAAO;AAAA;AAAA,KANAU,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}