{"ast":null,"code":"import { ProductionQuantityLimitsSharp } from \"@mui/icons-material\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport apiService from \"../../app/apiService\";\nimport { PER_PAGE } from \"../../app/config\";\nconst initialState = {\n  isLoading: false,\n  error: null,\n  orders: [],\n  ordersDashboard: [],\n  page: 1,\n  totalOrders: 0,\n  totalOrderDashboard: 0,\n  currentPage: 1,\n  totalPage: 1,\n  filters: {}\n};\nconst slice = createSlice({\n  name: \"order\",\n  initialState,\n  reducers: {\n    startLoading(state) {\n      state.isLoading = true;\n    },\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    addOrderSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n    },\n    getOrderSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.orders = action.payload;\n      state.totalPage = action.payload.totalPage;\n      state.totalOrders = action.payload.count;\n      console.log(action.payload);\n    },\n    getOrderDashboardSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      const {\n        ordersDashboard,\n        countCurent\n      } = action.payload;\n      state.ordersDashboard = ordersDashboard;\n      state.totalOrderDashboard = countCurent;\n    },\n    handleChangeFilters(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    handleClearFilters(state) {\n      state.isLoading = false;\n      state.error = null;\n      state.filters = {};\n    },\n    updateOrderSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n    }\n  }\n});\nexport default slice.reducer;\nexport const createOrder = _ref => {\n  let {\n    name,\n    addressShip,\n    phone,\n    products,\n    priceShip,\n    total,\n    userId\n  } = _ref;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading);\n    try {\n      const response = await apiService.post(`/orders/me`, {\n        name,\n        addressShip,\n        phone,\n        products,\n        priceShip,\n        total,\n        userId\n      });\n      dispatch(slice.actions.addOrderSuccess(response));\n      toast.success(\"Order Successfully\");\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n    }\n  };\n};\nexport const getOrder = _ref2 => {\n  let {\n    page,\n    limit = PER_PAGE\n  } = _ref2;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const params = {\n        page,\n        limit\n      };\n      const response = await apiService.get(`/orders/me`, {\n        params\n      });\n      dispatch(slice.actions.getOrderSuccess(response.data.orders));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n      toast.error(error.message);\n    }\n  };\n};\nexport const updateOrder = _ref3 => {\n  let {\n    id,\n    status\n  } = _ref3;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await apiService.put(`/orders/${id}`, {\n        status\n      });\n      dispatch(slice.actions.updateOrderSuccess(response.data));\n      toast.success(\"Update Order Successfully\");\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n      toast.error(error.message);\n    }\n  };\n};\n\n// GET ALL ORDER DASBOARD\nexport const getOrdersDashboard = _ref4 => {\n  let {\n    page,\n    limit = 5,\n    userId,\n    status\n  } = _ref4;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const params = {\n        page,\n        limit,\n        status\n      };\n      if (status) params.status = status;\n      const response = await apiService.get(`/orders`, {\n        params,\n        userId\n      });\n      dispatch(slice.actions.getOrderDashboardSuccess(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n      toast.error(error.message);\n    }\n  };\n};","map":{"version":3,"names":["ProductionQuantityLimitsSharp","createSlice","toast","apiService","PER_PAGE","initialState","isLoading","error","orders","ordersDashboard","page","totalOrders","totalOrderDashboard","currentPage","totalPage","filters","slice","name","reducers","startLoading","state","hasError","action","payload","addOrderSuccess","getOrderSuccess","count","console","log","getOrderDashboardSuccess","countCurent","handleChangeFilters","handleClearFilters","updateOrderSuccess","reducer","createOrder","addressShip","phone","products","priceShip","total","userId","dispatch","actions","response","post","success","message","getOrder","limit","params","get","data","updateOrder","id","status","put","getOrdersDashboard"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/src/features/order/orderSlice.js"],"sourcesContent":["import { ProductionQuantityLimitsSharp } from \"@mui/icons-material\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport apiService from \"../../app/apiService\";\r\nimport { PER_PAGE } from \"../../app/config\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  orders: [],\r\n  ordersDashboard: [],\r\n  page: 1,\r\n  totalOrders: 0,\r\n  totalOrderDashboard: 0,\r\n  currentPage: 1,\r\n  totalPage: 1,\r\n  filters: {},\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"order\",\r\n  initialState,\r\n  reducers: {\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    addOrderSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    getOrderSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.orders = action.payload;\r\n      state.totalPage = action.payload.totalPage;\r\n      state.totalOrders = action.payload.count;\r\n      console.log(action.payload);\r\n    },\r\n    getOrderDashboardSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      const { ordersDashboard, countCurent } = action.payload\r\n      state.ordersDashboard = ordersDashboard;\r\n      state.totalOrderDashboard = countCurent\r\n    },\r\n    handleChangeFilters(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.filters = { ...state.filters, ...action.payload };\r\n    },\r\n    handleClearFilters(state) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.filters = {};\r\n    },\r\n    updateOrderSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nexport const createOrder =\r\n  ({ name, addressShip, phone, products, priceShip, total, userId }) =>\r\n  async (dispatch) => {\r\n    dispatch(slice.actions.startLoading);\r\n    try {\r\n      const response = await apiService.post(`/orders/me`, {\r\n        name,\r\n        addressShip,\r\n        phone,\r\n        products,\r\n        priceShip,\r\n        total,\r\n        userId,\r\n      });\r\n      dispatch(slice.actions.addOrderSuccess(response));\r\n      toast.success(\"Order Successfully\");\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error.message));\r\n    }\r\n  };\r\n\r\nexport const getOrder =\r\n  ({ page, limit = PER_PAGE }) =>\r\n  async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const params = { page, limit };\r\n      const response = await apiService.get(`/orders/me`, { params });\r\n      dispatch(slice.actions.getOrderSuccess(response.data.orders));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error.message));\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\nexport const updateOrder =\r\n  ({ id, status }) =>\r\n  async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await apiService.put(`/orders/${id}`, {\r\n        status,\r\n      });\r\n      dispatch(slice.actions.updateOrderSuccess(response.data));\r\n      toast.success(\"Update Order Successfully\");\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error.message));\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n// GET ALL ORDER DASBOARD\r\nexport const getOrdersDashboard =\r\n  ({ page, limit = 5, userId, status }) =>\r\n  async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const params = { page, limit, status };\r\n      if (status) params.status = status;\r\n      const response = await apiService.get(`/orders`, {\r\n        params,\r\n        userId,\r\n      });\r\n      dispatch(slice.actions.getOrderDashboardSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error.message));\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}