{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gitlab\\\\dinhngocliennhi1999_frontend\\\\src\\\\features\\\\dashboard\\\\order\\\\OrderForm.js\",\n  _s = $RefreshSig$();\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, Grid, Typography } from '@mui/material';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from \"yup\";\nimport useAuth from '../../../hooks/useAuth';\nimport { getOrdersDashboard, updateOrder } from '../../order/orderSlice';\nimport { LoadingButton } from \"@mui/lab\";\nimport { FormProvider, FSelect } from '../../../components/form';\nimport { Box } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateStatusSchema = yup.object().shape({\n  status: yup.string().required(\"status is required\")\n});\nfunction OrderForm(_ref) {\n  _s();\n  let {\n    orders,\n    handleClose\n  } = _ref;\n  const {\n    isLoading\n  } = useSelector(state => state.order);\n  const {\n    user\n  } = useAuth();\n  const dispatch = useDispatch();\n  const userId = user._id;\n  const id = orders.orderId;\n  const defaultValues = {\n    status: (orders === null || orders === void 0 ? void 0 : orders.status) || \"\"\n  };\n  const methods = useForm({\n    resolver: yupResolver(UpdateStatusSchema),\n    defaultValues\n  });\n  const {\n    handleSubmit,\n    formState: {\n      isSubmitting\n    }\n  } = methods;\n  const onSubmit = data => {\n    const {\n      status\n    } = data;\n    const page = 1;\n    dispatch(updateOrder({\n      id: id,\n      status: status\n    }));\n    setTimeout(() => {\n      dispatch(getOrdersDashboard({\n        page,\n        userId\n      }));\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    methods: methods,\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 2\n        },\n        children: [\"codeID: (\", orders.orderId, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FSelect, {\n        name: \"status\",\n        label: \"status\",\n        size: \"small\",\n        sx: {\n          xs: 200,\n          md: 300\n        },\n        children: [{\n          value: \"\",\n          label: \"\"\n        }, {\n          value: \"Preparing Order\",\n          label: \"Preparing Order\"\n        }, {\n          value: \"Order is shipping\",\n          label: \"Order is shipping\"\n        }, {\n          value: \"Delivered\",\n          label: \"Delivered\"\n        }, {\n          value: \"Cancel\",\n          label: \"Cancel\"\n        }].map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3,\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(LoadingButton, {\n        sx: {},\n        onClick: handleClose,\n        type: \"submit\",\n        loading: isSubmitting || isLoading,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }, this);\n}\n_s(OrderForm, \"PpCwAzlQTcKouFAtOCd5SX6sJV0=\", false, function () {\n  return [useSelector, useAuth, useDispatch, useForm];\n});\n_c = OrderForm;\nexport default OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["yupResolver","Button","Grid","Typography","React","useForm","useDispatch","useSelector","yup","useAuth","getOrdersDashboard","updateOrder","LoadingButton","FormProvider","FSelect","Box","UpdateStatusSchema","object","shape","status","string","required","OrderForm","orders","handleClose","isLoading","state","order","user","dispatch","userId","_id","id","orderId","defaultValues","methods","resolver","handleSubmit","formState","isSubmitting","onSubmit","data","page","setTimeout","mb","xs","md","value","label","map","option","mt","display","justifyContent"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/src/features/dashboard/order/OrderForm.js"],"sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Button, Grid, Typography } from '@mui/material';\r\nimport React from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as yup from \"yup\";\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport { getOrdersDashboard, updateOrder } from '../../order/orderSlice';\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { FormProvider, FSelect } from '../../../components/form';\r\nimport { Box } from '@mui/system';\r\n\r\n\r\n const UpdateStatusSchema = yup.object().shape({\r\n    status: yup.string().required(\"status is required\"),\r\n});\r\nfunction OrderForm({orders, handleClose}) {\r\n const { isLoading } = useSelector((state) => state.order);\r\nconst { user } = useAuth();\r\n    const dispatch = useDispatch();\r\n    const userId = user._id\r\n    const id = orders.orderId\r\n    const defaultValues = {\r\n        status: orders?.status || \"\"\r\n    }\r\n const methods = useForm({\r\n        resolver: yupResolver(UpdateStatusSchema),\r\n        defaultValues,\r\n    });\r\n\r\nconst { handleSubmit,\r\n\r\n        formState: { isSubmitting },\r\n    } = methods;\r\n\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        const { status } = data\r\n        const page = 1\r\n        dispatch(updateOrder({ id: id, status: status }));\r\n        setTimeout(() => {\r\n            dispatch(getOrdersDashboard({ page, userId }))\r\n        }, 500);\r\n\r\n    };\r\n\r\n  return (\r\n          <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <Grid item xs={12} md={12}>\r\n                <Typography sx={{ mb: 2 }}>codeID: ({orders.orderId})</Typography>\r\n                <FSelect name=\"status\" label=\"status\" size=\"small\" sx={{ xs: 200, md: 300 }} >\r\n                    {[\r\n                        { value: \"\", label: \"\" },\r\n                        { value: \"Preparing Order\", label: \"Preparing Order\" },\r\n                        { value: \"Order is shipping\", label: \"Order is shipping\" },\r\n                        { value: \"Delivered\", label: \"Delivered\" },\r\n                        { value: \"Cancel\", label: \"Cancel\" },\r\n                    ].map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </FSelect>\r\n\r\n            </Grid>\r\n\r\n            <Box sx={{ mt: 3, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <LoadingButton\r\n                    sx={{}}\r\n                    onClick={handleClose}\r\n                    type=\"submit\"\r\n\r\n                    loading={isSubmitting || isLoading}\r\n                >\r\n                    Save\r\n                </LoadingButton>\r\n\r\n                <Button onClick={handleClose}>Cancel</Button>\r\n            </Box>\r\n        </FormProvider>\r\n  )\r\n}\r\n\r\nexport default OrderForm\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}