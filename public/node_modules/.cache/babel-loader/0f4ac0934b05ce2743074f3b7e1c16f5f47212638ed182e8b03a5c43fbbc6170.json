{"ast":null,"code":"import Reference from '../Reference';\nexport default class ReferenceSet {\n  constructor() {\n    this.list = void 0;\n    this.refs = void 0;\n    this.list = new Set();\n    this.refs = new Map();\n  }\n  get size() {\n    return this.list.size + this.refs.size;\n  }\n  describe() {\n    const description = [];\n    for (const item of this.list) description.push(item);\n    for (const [, ref] of this.refs) description.push(ref.describe());\n    return description;\n  }\n  toArray() {\n    return Array.from(this.list).concat(Array.from(this.refs.values()));\n  }\n  resolveAll(resolve) {\n    return this.toArray().reduce((acc, e) => acc.concat(Reference.isRef(e) ? resolve(e) : e), []);\n  }\n  add(value) {\n    Reference.isRef(value) ? this.refs.set(value.key, value) : this.list.add(value);\n  }\n  delete(value) {\n    Reference.isRef(value) ? this.refs.delete(value.key) : this.list.delete(value);\n  }\n  clone() {\n    const next = new ReferenceSet();\n    next.list = new Set(this.list);\n    next.refs = new Map(this.refs);\n    return next;\n  }\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.list.forEach(value => next.add(value));\n    newItems.refs.forEach(value => next.add(value));\n    removeItems.list.forEach(value => next.delete(value));\n    removeItems.refs.forEach(value => next.delete(value));\n    return next;\n  }\n}","map":{"version":3,"names":["Reference","ReferenceSet","constructor","list","refs","Set","Map","size","describe","description","item","push","ref","toArray","Array","from","concat","values","resolveAll","resolve","reduce","acc","e","isRef","add","value","set","key","delete","clone","next","merge","newItems","removeItems","forEach"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/node_modules/yup/es/util/ReferenceSet.js"],"sourcesContent":["import Reference from '../Reference';\nexport default class ReferenceSet {\n  constructor() {\n    this.list = void 0;\n    this.refs = void 0;\n    this.list = new Set();\n    this.refs = new Map();\n  }\n\n  get size() {\n    return this.list.size + this.refs.size;\n  }\n\n  describe() {\n    const description = [];\n\n    for (const item of this.list) description.push(item);\n\n    for (const [, ref] of this.refs) description.push(ref.describe());\n\n    return description;\n  }\n\n  toArray() {\n    return Array.from(this.list).concat(Array.from(this.refs.values()));\n  }\n\n  resolveAll(resolve) {\n    return this.toArray().reduce((acc, e) => acc.concat(Reference.isRef(e) ? resolve(e) : e), []);\n  }\n\n  add(value) {\n    Reference.isRef(value) ? this.refs.set(value.key, value) : this.list.add(value);\n  }\n\n  delete(value) {\n    Reference.isRef(value) ? this.refs.delete(value.key) : this.list.delete(value);\n  }\n\n  clone() {\n    const next = new ReferenceSet();\n    next.list = new Set(this.list);\n    next.refs = new Map(this.refs);\n    return next;\n  }\n\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.list.forEach(value => next.add(value));\n    newItems.refs.forEach(value => next.add(value));\n    removeItems.list.forEach(value => next.delete(value));\n    removeItems.refs.forEach(value => next.delete(value));\n    return next;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}