{"ast":null,"code":"import { ProductionQuantityLimitsSharp } from \"@mui/icons-material\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport apiService from \"../../app/apiService\";\nimport { PER_PAGE } from \"../../app/config\";\nconst initialState = {\n  isLoading: false,\n  error: null,\n  orders: [],\n  page: 1,\n  totalOrders: 0\n};\nconst slice = createSlice({\n  name: \"order\",\n  initialState,\n  reducers: {\n    startLoading(state) {\n      state.isLoading = true;\n    },\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    addOrderSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n    },\n    getOrderSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.orders = action.payload;\n    },\n    updateOrderSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n    }\n  }\n});\nexport default slice.reducer;\nexport const createOrder = _ref => {\n  let {\n    name,\n    addressShip,\n    phone,\n    products,\n    priceShip,\n    total,\n    userId\n  } = _ref;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading);\n    try {\n      const response = await apiService.post(`/orders/me`, {\n        name,\n        addressShip,\n        phone,\n        products,\n        priceShip,\n        total,\n        userId\n      });\n      dispatch(slice.actions.addOrderSuccess(response));\n      toast.success(\"Order Successfully\");\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n    }\n  };\n};\nexport const getOrder = _ref2 => {\n  let {\n    page,\n    limit = PER_PAGE\n  } = _ref2;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const params = {\n        page,\n        limit\n      };\n      const response = await apiService.get(`/orders/me`, {\n        params\n      });\n      dispatch(slice.actions.getOrderSuccess(response.data.orders));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n      toast.error(error.message);\n    }\n  };\n};\nexport const updateOrder = _ref3 => {\n  let {\n    id,\n    status\n  } = _ref3;\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await apiService.put(`/orders/me/${id}`, {\n        status\n      });\n      dispatch(slice.actions.updateOrderSuccess(response.data));\n      toast.success(\"Update Order Successfully\");\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n      toast.error(error.message);\n    }\n  };\n};","map":{"version":3,"names":["ProductionQuantityLimitsSharp","createSlice","toast","apiService","PER_PAGE","initialState","isLoading","error","orders","page","totalOrders","slice","name","reducers","startLoading","state","hasError","action","payload","addOrderSuccess","getOrderSuccess","updateOrderSuccess","reducer","createOrder","addressShip","phone","products","priceShip","total","userId","dispatch","actions","response","post","success","message","getOrder","limit","params","get","data","updateOrder","id","status","put"],"sources":["D:/Gitlab/dinhngocliennhi1999_frontend/src/features/order/orderSlice.js"],"sourcesContent":["import { ProductionQuantityLimitsSharp } from \"@mui/icons-material\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport apiService from \"../../app/apiService\";\r\nimport { PER_PAGE } from \"../../app/config\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  orders: [],\r\n  page: 1,\r\n  totalOrders: 0,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"order\",\r\n  initialState,\r\n  reducers: {\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    addOrderSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    getOrderSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.orders = action.payload;\r\n    },\r\n    updateOrderSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nexport const createOrder =\r\n  ({ name, addressShip, phone, products, priceShip, total, userId }) =>\r\n  async (dispatch) => {\r\n    dispatch(slice.actions.startLoading);\r\n    try {\r\n      const response = await apiService.post(`/orders/me`, {\r\n        name,\r\n        addressShip,\r\n        phone,\r\n        products,\r\n        priceShip,\r\n        total,\r\n        userId,\r\n      });\r\n      dispatch(slice.actions.addOrderSuccess(response));\r\n      toast.success(\"Order Successfully\");\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error.message));\r\n    }\r\n  };\r\n\r\nexport const getOrder =\r\n  ({ page, limit = PER_PAGE }) =>\r\n  async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const params = { page, limit };\r\n      const response = await apiService.get(`/orders/me`, { params });\r\n      dispatch(slice.actions.getOrderSuccess(response.data.orders));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error.message));\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\nexport const updateOrder =\r\n  ({ id, status }) =>\r\n  async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await apiService.put(`/orders/me/${id}`, {\r\n        status,\r\n      });\r\n      dispatch(slice.actions.updateOrderSuccess(response.data));\r\n      toast.success(\"Update Order Successfully\");\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error.message));\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}