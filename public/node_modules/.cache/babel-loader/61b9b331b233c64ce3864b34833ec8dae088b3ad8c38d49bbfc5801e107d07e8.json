{"ast":null,"code":"/**\n * SimpleBar.js - v5.3.9\n * Scrollbars, simpler.\n * https://grsmto.github.io/simplebar/\n *\n * Made by Adrien Denat from a fork by Jonathan Nicol\n * Under MIT License\n */\n\nimport throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport canUseDOM from 'can-use-dom';\nfunction getElementWindow(element) {\n  if (!element || !element.ownerDocument || !element.ownerDocument.defaultView) {\n    return window;\n  }\n  return element.ownerDocument.defaultView;\n}\nfunction getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n  return element.ownerDocument;\n}\nvar cachedScrollbarWidth = null;\nvar cachedDevicePixelRatio = null;\nif (canUseDOM) {\n  window.addEventListener('resize', function () {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\nfunction scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    var document = getElementDocument(el);\n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n    var body = document.body;\n    var box = document.createElement('div');\n    box.classList.add('simplebar-hide-scrollbar');\n    body.appendChild(box);\n    var width = box.getBoundingClientRect().right;\n    body.removeChild(box);\n    cachedScrollbarWidth = width;\n  }\n  return cachedScrollbarWidth;\n}\nvar SimpleBar = /*#__PURE__*/function () {\n  function SimpleBar(element, options) {\n    var _this = this;\n    this.onScroll = function () {\n      var elWindow = getElementWindow(_this.el);\n      if (!_this.scrollXTicking) {\n        elWindow.requestAnimationFrame(_this.scrollX);\n        _this.scrollXTicking = true;\n      }\n      if (!_this.scrollYTicking) {\n        elWindow.requestAnimationFrame(_this.scrollY);\n        _this.scrollYTicking = true;\n      }\n    };\n    this.scrollX = function () {\n      if (_this.axis.x.isOverflowing) {\n        _this.showScrollbar('x');\n        _this.positionScrollbar('x');\n      }\n      _this.scrollXTicking = false;\n    };\n    this.scrollY = function () {\n      if (_this.axis.y.isOverflowing) {\n        _this.showScrollbar('y');\n        _this.positionScrollbar('y');\n      }\n      _this.scrollYTicking = false;\n    };\n    this.onMouseEnter = function () {\n      _this.showScrollbar('x');\n      _this.showScrollbar('y');\n    };\n    this.onMouseMove = function (e) {\n      _this.mouseX = e.clientX;\n      _this.mouseY = e.clientY;\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        _this.onMouseMoveForAxis('x');\n      }\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        _this.onMouseMoveForAxis('y');\n      }\n    };\n    this.onMouseLeave = function () {\n      _this.onMouseMove.cancel();\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        _this.onMouseLeaveForAxis('x');\n      }\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        _this.onMouseLeaveForAxis('y');\n      }\n      _this.mouseX = -1;\n      _this.mouseY = -1;\n    };\n    this.onWindowResize = function () {\n      // Recalculate scrollbarWidth in case it's a zoom\n      _this.scrollbarWidth = _this.getScrollbarWidth();\n      _this.hideNativeScrollbar();\n    };\n    this.hideScrollbars = function () {\n      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n      if (!_this.isWithinBounds(_this.axis.y.track.rect)) {\n        _this.axis.y.scrollbar.el.classList.remove(_this.classNames.visible);\n        _this.axis.y.isVisible = false;\n      }\n      if (!_this.isWithinBounds(_this.axis.x.track.rect)) {\n        _this.axis.x.scrollbar.el.classList.remove(_this.classNames.visible);\n        _this.axis.x.isVisible = false;\n      }\n    };\n    this.onPointerEvent = function (e) {\n      var isWithinTrackXBounds, isWithinTrackYBounds;\n      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        isWithinTrackXBounds = _this.isWithinBounds(_this.axis.x.track.rect);\n      }\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        isWithinTrackYBounds = _this.isWithinBounds(_this.axis.y.track.rect);\n      } // If any pointer event is called on the scrollbar\n\n      if (isWithinTrackXBounds || isWithinTrackYBounds) {\n        // Preventing the event's default action stops text being\n        // selectable during the drag.\n        e.preventDefault(); // Prevent event leaking\n\n        e.stopPropagation();\n        if (e.type === 'mousedown') {\n          if (isWithinTrackXBounds) {\n            _this.axis.x.scrollbar.rect = _this.axis.x.scrollbar.el.getBoundingClientRect();\n            if (_this.isWithinBounds(_this.axis.x.scrollbar.rect)) {\n              _this.onDragStart(e, 'x');\n            } else {\n              _this.onTrackClick(e, 'x');\n            }\n          }\n          if (isWithinTrackYBounds) {\n            _this.axis.y.scrollbar.rect = _this.axis.y.scrollbar.el.getBoundingClientRect();\n            if (_this.isWithinBounds(_this.axis.y.scrollbar.rect)) {\n              _this.onDragStart(e, 'y');\n            } else {\n              _this.onTrackClick(e, 'y');\n            }\n          }\n        }\n      }\n    };\n    this.drag = function (e) {\n      var eventOffset;\n      var track = _this.axis[_this.draggedAxis].track;\n      var trackSize = track.rect[_this.axis[_this.draggedAxis].sizeAttr];\n      var scrollbar = _this.axis[_this.draggedAxis].scrollbar;\n      var contentSize = _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollSizeAttr];\n      var hostSize = parseInt(_this.elStyles[_this.axis[_this.draggedAxis].sizeAttr], 10);\n      e.preventDefault();\n      e.stopPropagation();\n      if (_this.draggedAxis === 'y') {\n        eventOffset = e.pageY;\n      } else {\n        eventOffset = e.pageX;\n      } // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n\n      var dragPos = eventOffset - track.rect[_this.axis[_this.draggedAxis].offsetAttr] - _this.axis[_this.draggedAxis].dragOffset; // Convert the mouse position into a percentage of the scrollbar height/width.\n\n      var dragPerc = dragPos / (trackSize - scrollbar.size); // Scroll the content by the same percentage.\n\n      var scrollPos = dragPerc * (contentSize - hostSize); // Fix browsers inconsistency on RTL\n\n      if (_this.draggedAxis === 'x') {\n        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? scrollPos - (trackSize + scrollbar.size) : scrollPos;\n        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollPos : scrollPos;\n      }\n      _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollOffsetAttr] = scrollPos;\n    };\n    this.onEndDrag = function (e) {\n      var elDocument = getElementDocument(_this.el);\n      var elWindow = getElementWindow(_this.el);\n      e.preventDefault();\n      e.stopPropagation();\n      _this.el.classList.remove(_this.classNames.dragging);\n      elDocument.removeEventListener('mousemove', _this.drag, true);\n      elDocument.removeEventListener('mouseup', _this.onEndDrag, true);\n      _this.removePreventClickId = elWindow.setTimeout(function () {\n        // Remove these asynchronously so we still suppress click events\n        // generated simultaneously with mouseup.\n        elDocument.removeEventListener('click', _this.preventClick, true);\n        elDocument.removeEventListener('dblclick', _this.preventClick, true);\n        _this.removePreventClickId = null;\n      });\n    };\n    this.preventClick = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = Object.assign({}, SimpleBar.defaultOptions, options);\n    this.classNames = Object.assign({}, SimpleBar.defaultOptions.classNames, this.options.classNames);\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null; // Don't re-instantiate over an existing one\n\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(this.hideScrollbars.bind(this), this.options.timeout);\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n    this.init();\n  }\n  /**\n   * Static properties\n   */\n\n  /**\n   * Helper to fix browsers inconsistency on RTL:\n   *  - Firefox inverts the scrollbar initial position\n   *  - IE11 inverts both scrollbar position and scrolling offset\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n   */\n\n  SimpleBar.getRtlHelpers = function getRtlHelpers() {\n    var dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML = '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    var scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    var dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    var dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    var dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    var dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(dummyContainerChild);\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left && dummyContainerChildOffset.left - dummyContainerScrollOffsetAfterScroll.left !== 0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  };\n  SimpleBar.getOffset = function getOffset(el) {\n    var rect = el.getBoundingClientRect();\n    var elDocument = getElementDocument(el);\n    var elWindow = getElementWindow(el);\n    return {\n      top: rect.top + (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left: rect.left + (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  };\n  var _proto = SimpleBar.prototype;\n  _proto.init = function init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this); // We stop here on server-side\n\n    if (canUseDOM) {\n      this.initDOM();\n      this.setAccessibilityAttributes();\n      this.scrollbarWidth = this.getScrollbarWidth();\n      this.recalculate();\n      this.initListeners();\n    }\n  };\n  _proto.initDOM = function initDOM() {\n    var _this2 = this;\n\n    // make sure this element doesn't have the elements yet\n    if (Array.prototype.filter.call(this.el.children, function (child) {\n      return child.classList.contains(_this2.classNames.wrapper);\n    }).length) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(\".\" + this.classNames.wrapper);\n      this.contentWrapperEl = this.options.scrollableNode || this.el.querySelector(\".\" + this.classNames.contentWrapper);\n      this.contentEl = this.options.contentNode || this.el.querySelector(\".\" + this.classNames.contentEl);\n      this.offsetEl = this.el.querySelector(\".\" + this.classNames.offset);\n      this.maskEl = this.el.querySelector(\".\" + this.classNames.mask);\n      this.placeholderEl = this.findChild(this.wrapperEl, \".\" + this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\".\" + this.classNames.heightAutoObserverWrapperEl);\n      this.heightAutoObserverEl = this.el.querySelector(\".\" + this.classNames.heightAutoObserverEl);\n      this.axis.x.track.el = this.findChild(this.el, \".\" + this.classNames.track + \".\" + this.classNames.horizontal);\n      this.axis.y.track.el = this.findChild(this.el, \".\" + this.classNames.track + \".\" + this.classNames.vertical);\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(this.classNames.heightAutoObserverWrapperEl);\n      this.heightAutoObserverEl.classList.add(this.classNames.heightAutoObserverEl);\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      var track = document.createElement('div');\n      var scrollbar = document.createElement('div');\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n      track.appendChild(scrollbar);\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\".\" + this.classNames.scrollbar);\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\".\" + this.classNames.scrollbar);\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n    this.el.setAttribute('data-simplebar', 'init');\n  };\n  _proto.setAccessibilityAttributes = function setAccessibilityAttributes() {\n    var ariaLabel = this.options.ariaLabel || 'scrollable content';\n    this.contentWrapperEl.setAttribute('tabindex', '0');\n    this.contentWrapperEl.setAttribute('role', 'region');\n    this.contentWrapperEl.setAttribute('aria-label', ariaLabel);\n  };\n  _proto.initListeners = function initListeners() {\n    var _this3 = this;\n    var elWindow = getElementWindow(this.el); // Event listeners\n\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n    ['mousedown', 'click', 'dblclick'].forEach(function (e) {\n      _this3.el.addEventListener(e, _this3.onPointerEvent, true);\n    });\n    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {\n      _this3.el.addEventListener(e, _this3.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll); // Browser zoom triggers a window resize\n\n    elWindow.addEventListener('resize', this.onWindowResize); // Hack for https://github.com/WICG/ResizeObserver/issues/38\n\n    var resizeObserverStarted = false;\n    var resizeAnimationFrameId = null;\n    var resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n    this.resizeObserver = new resizeObserver(function () {\n      if (!resizeObserverStarted || resizeAnimationFrameId !== null) return;\n      resizeAnimationFrameId = elWindow.requestAnimationFrame(function () {\n        _this3.recalculate();\n        resizeAnimationFrameId = null;\n      });\n    });\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n    elWindow.requestAnimationFrame(function () {\n      resizeObserverStarted = true;\n    }); // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  };\n  _proto.recalculate = function recalculate() {\n    var elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n    var isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    var isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    var contentElOffsetWidth = this.contentEl.offsetWidth;\n    var contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n    var elOverflowX = this.elStyles.overflowX;\n    var elOverflowY = this.elStyles.overflowY;\n    this.contentEl.style.padding = this.elStyles.paddingTop + \" \" + this.elStyles.paddingRight + \" \" + this.elStyles.paddingBottom + \" \" + this.elStyles.paddingLeft;\n    this.wrapperEl.style.margin = \"-\" + this.elStyles.paddingTop + \" -\" + this.elStyles.paddingRight + \" -\" + this.elStyles.paddingBottom + \" -\" + this.elStyles.paddingLeft;\n    var contentElScrollHeight = this.contentEl.scrollHeight;\n    var contentElScrollWidth = this.contentEl.scrollWidth;\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%'; // Determine placeholder size\n\n    this.placeholderEl.style.width = isWidthAuto ? contentElOffsetWidth + \"px\" : 'auto';\n    this.placeholderEl.style.height = contentElScrollHeight + \"px\";\n    var contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing = contentElScrollHeight > contentWrapperElOffsetHeight; // Set isOverflowing to false if user explicitely set hidden overflow\n\n    this.axis.x.isOverflowing = elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing = elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n    this.axis.x.forceVisible = this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible = this.options.forceVisible === 'y' || this.options.forceVisible === true;\n    this.hideNativeScrollbar(); // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n\n    var offsetForXScrollbar = this.axis.x.isOverflowing ? this.scrollbarWidth : 0;\n    var offsetForYScrollbar = this.axis.y.isOverflowing ? this.scrollbarWidth : 0;\n    this.axis.x.isOverflowing = this.axis.x.isOverflowing && contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing = this.axis.y.isOverflowing && contentElScrollHeight > contentWrapperElOffsetHeight - offsetForXScrollbar;\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n    this.axis.x.scrollbar.el.style.width = this.axis.x.scrollbar.size + \"px\";\n    this.axis.y.scrollbar.el.style.height = this.axis.y.scrollbar.size + \"px\";\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n  /**\n   * Calculate scrollbar size\n   */;\n\n  _proto.getScrollbarSize = function getScrollbarSize(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n    var contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    var scrollbarSize;\n    var scrollbarRatio = trackSize / contentSize; // Calculate new height/position of drag handle.\n\n    scrollbarSize = Math.max(~~(scrollbarRatio * trackSize), this.options.scrollbarMinSize);\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n    return scrollbarSize;\n  };\n  _proto.positionScrollbar = function positionScrollbar(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n    var contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    var scrollbar = this.axis[axis].scrollbar;\n    var scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollOffset : scrollOffset;\n    var scrollPourcent = scrollOffset / (contentSize - hostSize);\n    var handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? handleOffset + (trackSize - scrollbar.size) : handleOffset;\n    scrollbar.el.style.transform = axis === 'x' ? \"translate3d(\" + handleOffset + \"px, 0, 0)\" : \"translate3d(0, \" + handleOffset + \"px, 0)\";\n  };\n  _proto.toggleTrackVisibility = function toggleTrackVisibility(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    var track = this.axis[axis].track.el;\n    var scrollbar = this.axis[axis].scrollbar.el;\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    } // Even if forceVisible is enabled, scrollbar itself should be hidden\n\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  };\n  _proto.hideNativeScrollbar = function hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? \"-\" + this.scrollbarWidth + \"px\" : 0;\n    this.offsetEl.style.bottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? \"-\" + this.scrollbarWidth + \"px\" : 0;\n  }\n  /**\n   * On scroll event handling\n   */;\n\n  _proto.onMouseMoveForAxis = function onMouseMoveForAxis(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    this.axis[axis].track.rect = this.axis[axis].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();\n    var isWithinScrollbarBoundsX = this.isWithinBounds(this.axis[axis].scrollbar.rect);\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  };\n  _proto.onMouseLeaveForAxis = function onMouseLeaveForAxis(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  };\n\n  /**\n   * Show scrollbar\n   */\n  _proto.showScrollbar = function showScrollbar(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    var scrollbar = this.axis[axis].scrollbar.el;\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n  /**\n   * Hide Scrollbar\n   */;\n\n  /**\n   * on scrollbar handle drag movement starts\n   */\n  _proto.onDragStart = function onDragStart(e, axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    var elDocument = getElementDocument(this.el);\n    var elWindow = getElementWindow(this.el);\n    var scrollbar = this.axis[axis].scrollbar; // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n\n    var eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset = eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n    this.el.classList.add(this.classNames.dragging);\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n  /**\n   * Drag scrollbar handle\n   */;\n\n  _proto.onTrackClick = function onTrackClick(e, axis) {\n    var _this4 = this;\n    if (axis === void 0) {\n      axis = 'y';\n    }\n    if (!this.options.clickOnTrack) return;\n    var elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();\n    var scrollbar = this.axis[axis].scrollbar;\n    var scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    var scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    var t = axis === 'y' ? this.mouseY - scrollbarOffset : this.mouseX - scrollbarOffset;\n    var dir = t < 0 ? -1 : 1;\n    var scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n    var scrollTo = function scrollTo() {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          var _this4$contentWrapper;\n          scrolled -= _this4.options.clickOnTrackSpeed;\n          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper = {}, _this4$contentWrapper[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper));\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          var _this4$contentWrapper2;\n          scrolled += _this4.options.clickOnTrackSpeed;\n          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper2 = {}, _this4$contentWrapper2[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper2));\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n    scrollTo();\n  }\n  /**\n   * Getter for content element\n   */;\n\n  _proto.getContentElement = function getContentElement() {\n    return this.contentEl;\n  }\n  /**\n   * Getter for original scrolling element\n   */;\n\n  _proto.getScrollElement = function getScrollElement() {\n    return this.contentWrapperEl;\n  };\n  _proto.getScrollbarWidth = function getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar').display === 'none' || 'scrollbarWidth' in document.documentElement.style || '-ms-overflow-style' in document.documentElement.style) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  };\n  _proto.removeListeners = function removeListeners() {\n    var _this5 = this;\n    var elWindow = getElementWindow(this.el); // Event listeners\n\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n    ['mousedown', 'click', 'dblclick'].forEach(function (e) {\n      _this5.el.removeEventListener(e, _this5.onPointerEvent, true);\n    });\n    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {\n      _this5.el.removeEventListener(e, _this5.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n    elWindow.removeEventListener('resize', this.onWindowResize);\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    } // Cancel all debounced functions\n\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n  /**\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\n   */;\n\n  _proto.unMount = function unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n  /**\n   * Check if mouse is within bounds\n   */;\n\n  _proto.isWithinBounds = function isWithinBounds(bbox) {\n    return this.mouseX >= bbox.left && this.mouseX <= bbox.left + bbox.width && this.mouseY >= bbox.top && this.mouseY <= bbox.top + bbox.height;\n  }\n  /**\n   * Find element children matches query\n   */;\n\n  _proto.findChild = function findChild(el, query) {\n    var matches = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, function (child) {\n      return matches.call(child, query);\n    })[0];\n  };\n  return SimpleBar;\n}();\nSimpleBar.defaultOptions = {\n  autoHide: true,\n  forceVisible: false,\n  clickOnTrack: true,\n  clickOnTrackSpeed: 40,\n  classNames: {\n    contentEl: 'simplebar-content',\n    contentWrapper: 'simplebar-content-wrapper',\n    offset: 'simplebar-offset',\n    mask: 'simplebar-mask',\n    wrapper: 'simplebar-wrapper',\n    placeholder: 'simplebar-placeholder',\n    scrollbar: 'simplebar-scrollbar',\n    track: 'simplebar-track',\n    heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n    heightAutoObserverEl: 'simplebar-height-auto-observer',\n    visible: 'simplebar-visible',\n    horizontal: 'simplebar-horizontal',\n    vertical: 'simplebar-vertical',\n    hover: 'simplebar-hover',\n    dragging: 'simplebar-dragging'\n  },\n  scrollbarMinSize: 25,\n  scrollbarMaxSize: 0,\n  timeout: 1000\n};\nSimpleBar.instances = new WeakMap();\nexport default SimpleBar;","map":{"version":3,"mappings":"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","names":["getElementWindow","element","ownerDocument","defaultView","window","getElementDocument","document","cachedScrollbarWidth","cachedDevicePixelRatio","canUseDOM","addEventListener","devicePixelRatio","scrollbarWidth","el","body","box","createElement","classList","add","appendChild","width","getBoundingClientRect","right","removeChild","SimpleBar","options","onScroll","elWindow","_this","scrollXTicking","requestAnimationFrame","scrollX","scrollYTicking","scrollY","axis","x","isOverflowing","showScrollbar","positionScrollbar","y","onMouseEnter","onMouseMove","mouseX","e","clientX","mouseY","clientY","forceVisible","onMouseMoveForAxis","onMouseLeave","cancel","onMouseLeaveForAxis","onWindowResize","getScrollbarWidth","hideNativeScrollbar","hideScrollbars","track","rect","isWithinBounds","scrollbar","remove","classNames","visible","isVisible","onPointerEvent","isWithinTrackXBounds","isWithinTrackYBounds","preventDefault","stopPropagation","type","onDragStart","onTrackClick","drag","eventOffset","draggedAxis","trackSize","sizeAttr","contentSize","contentWrapperEl","scrollSizeAttr","hostSize","parseInt","elStyles","pageY","pageX","dragPos","offsetAttr","dragOffset","dragPerc","size","scrollPos","isRtl","getRtlHelpers","isRtlScrollbarInverted","isRtlScrollingInverted","scrollOffsetAttr","onEndDrag","elDocument","dragging","removeEventListener","removePreventClickId","setTimeout","preventClick","minScrollbarWidth","defaultOptions","offsetSizeAttr","overflowAttr","instances","has","recalculate","throttle","bind","debounce","timeout","leading","memoize","init","dummyDiv","innerHTML","scrollbarDummyEl","firstElementChild","dummyContainerChild","scrollLeft","dummyContainerOffset","getOffset","dummyContainerChildOffset","dummyContainerScrollOffsetAfterScroll","left","top","pageYOffset","documentElement","scrollTop","pageXOffset","set","initDOM","setAccessibilityAttributes","initListeners","Array","prototype","filter","call","children","child","contains","_this2","wrapper","length","wrapperEl","querySelector","scrollableNode","contentWrapper","contentEl","contentNode","offsetEl","offset","maskEl","mask","placeholderEl","findChild","placeholder","heightAutoObserverWrapperEl","heightAutoObserverEl","horizontal","vertical","firstChild","cloneNode","autoHide","setAttribute","ariaLabel","forEach","_this3","capture","passive","resizeObserverStarted","resizeAnimationFrameId","resizeObserver","ResizeObserver","observe","mutationObserver","MutationObserver","childList","subtree","characterData","getComputedStyle","direction","isHeightAuto","offsetHeight","isWidthAuto","offsetWidth","contentElOffsetWidth","contentWrapperElOffsetWidth","elOverflowX","overflowX","elOverflowY","overflowY","style","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","contentElScrollHeight","scrollHeight","contentElScrollWidth","scrollWidth","height","contentWrapperElOffsetHeight","offsetForXScrollbar","offsetForYScrollbar","getScrollbarSize","toggleTrackVisibility","scrollbarSize","scrollbarRatio","Math","max","scrollbarMinSize","scrollbarMaxSize","min","scrollOffset","scrollPourcent","handleOffset","transform","visibility","display","bottom","isWithinScrollbarBoundsX","hover","clearTimeout","clickOnTrack","scrollbarOffset","scrolled","t","dir","scrollSize","scrollTo","_this4","clickOnTrackSpeed","getContentElement","getScrollElement","removeListeners","_this5","disconnect","unMount","delete","bbox","query","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","WeakMap"],"sources":["D:\\Gitlab\\dinhngocliennhi1999_frontend\\node_modules\\simplebar\\src\\helpers.js","D:\\Gitlab\\dinhngocliennhi1999_frontend\\node_modules\\simplebar\\src\\scrollbar-width.js","D:\\Gitlab\\dinhngocliennhi1999_frontend\\node_modules\\simplebar\\src\\simplebar.js"],"sourcesContent":["// Helper function to retrieve options from element attributes\nexport const getOptions = function(obj) {\n  const options = Array.prototype.reduce.call(\n    obj,\n    (acc, attribute) => {\n      const option = attribute.name.match(/data-simplebar-(.+)/);\n      if (option) {\n        const key = option[1].replace(/\\W+(.)/g, (x, chr) => chr.toUpperCase());\n        switch (attribute.value) {\n          case 'true':\n            acc[key] = true;\n            break;\n          case 'false':\n            acc[key] = false;\n            break;\n          case undefined:\n            acc[key] = true;\n            break;\n          default:\n            acc[key] = attribute.value;\n        }\n      }\n      return acc;\n    },\n    {}\n  );\n  return options;\n};\n\nexport function getElementWindow(element) {\n  if (\n    !element ||\n    !element.ownerDocument ||\n    !element.ownerDocument.defaultView\n  ) {\n    return window;\n  }\n  return element.ownerDocument.defaultView;\n}\n\nexport function getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n  return element.ownerDocument;\n}\n","import canUseDOM from 'can-use-dom';\nimport { getElementDocument } from \"./helpers\";\n\nlet cachedScrollbarWidth = null;\nlet cachedDevicePixelRatio = null;\n\nif (canUseDOM) {\n  window.addEventListener('resize', () => {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\n\nexport default function scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    \n    const document = getElementDocument(el);\n    \n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n    const body = document.body;\n    const box = document.createElement('div');\n\n    box.classList.add('simplebar-hide-scrollbar');\n\n    body.appendChild(box);\n\n    const width = box.getBoundingClientRect().right;\n\n    body.removeChild(box);\n\n    cachedScrollbarWidth = width;\n  }\n\n  return cachedScrollbarWidth;\n}\n","import throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport canUseDOM from 'can-use-dom';\nimport scrollbarWidth from './scrollbar-width';\nimport { getElementWindow, getElementDocument } from './helpers';\n\nexport default class SimpleBar {\n  constructor(element, options) {\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = { ...SimpleBar.defaultOptions, ...options };\n    this.classNames = {\n      ...SimpleBar.defaultOptions.classNames,\n      ...this.options.classNames\n    };\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null;\n\n    // Don't re-instantiate over an existing one\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(\n      this.hideScrollbars.bind(this),\n      this.options.timeout\n    );\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n\n    this.init();\n  }\n\n  /**\n   * Static properties\n   */\n\n  /**\n   * Helper to fix browsers inconsistency on RTL:\n   *  - Firefox inverts the scrollbar initial position\n   *  - IE11 inverts both scrollbar position and scrolling offset\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n   */\n  static getRtlHelpers() {\n    const dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML =\n      '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    const scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    const dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    const dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    const dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    const dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(\n      dummyContainerChild\n    );\n\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left &&\n        dummyContainerChildOffset.left -\n          dummyContainerScrollOffsetAfterScroll.left !==\n          0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  }\n\n  static defaultOptions = {\n    autoHide: true,\n    forceVisible: false,\n    clickOnTrack: true,\n    clickOnTrackSpeed: 40,\n    classNames: {\n      contentEl: 'simplebar-content',\n      contentWrapper: 'simplebar-content-wrapper',\n      offset: 'simplebar-offset',\n      mask: 'simplebar-mask',\n      wrapper: 'simplebar-wrapper',\n      placeholder: 'simplebar-placeholder',\n      scrollbar: 'simplebar-scrollbar',\n      track: 'simplebar-track',\n      heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n      heightAutoObserverEl: 'simplebar-height-auto-observer',\n      visible: 'simplebar-visible',\n      horizontal: 'simplebar-horizontal',\n      vertical: 'simplebar-vertical',\n      hover: 'simplebar-hover',\n      dragging: 'simplebar-dragging'\n    },\n    scrollbarMinSize: 25,\n    scrollbarMaxSize: 0,\n    timeout: 1000\n  };\n\n  static getOffset(el) {\n    const rect = el.getBoundingClientRect();\n    const elDocument = getElementDocument(el);\n    const elWindow = getElementWindow(el);\n\n    return {\n      top:\n        rect.top +\n        (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left:\n        rect.left +\n        (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  }\n\n  static instances = new WeakMap();\n\n  init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this);\n\n    // We stop here on server-side\n    if (canUseDOM) {\n      this.initDOM();\n\n      this.setAccessibilityAttributes();\n\n      this.scrollbarWidth = this.getScrollbarWidth();\n\n      this.recalculate();\n\n      this.initListeners();\n    }\n  }\n\n  initDOM() {\n    // make sure this element doesn't have the elements yet\n    if (\n      Array.prototype.filter.call(this.el.children, child =>\n        child.classList.contains(this.classNames.wrapper)\n      ).length\n    ) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(`.${this.classNames.wrapper}`);\n      this.contentWrapperEl =\n        this.options.scrollableNode ||\n        this.el.querySelector(`.${this.classNames.contentWrapper}`);\n      this.contentEl =\n        this.options.contentNode ||\n        this.el.querySelector(`.${this.classNames.contentEl}`);\n\n      this.offsetEl = this.el.querySelector(`.${this.classNames.offset}`);\n      this.maskEl = this.el.querySelector(`.${this.classNames.mask}`);\n\n      this.placeholderEl = this.findChild(\n        this.wrapperEl,\n        `.${this.classNames.placeholder}`\n      );\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverWrapperEl}`\n      );\n      this.heightAutoObserverEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverEl}`\n      );\n      this.axis.x.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.horizontal}`\n      );\n      this.axis.y.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.vertical}`\n      );\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(\n        this.classNames.heightAutoObserverWrapperEl\n      );\n      this.heightAutoObserverEl.classList.add(\n        this.classNames.heightAutoObserverEl\n      );\n\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      const track = document.createElement('div');\n      const scrollbar = document.createElement('div');\n\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n\n      track.appendChild(scrollbar);\n\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n\n    this.el.setAttribute('data-simplebar', 'init');\n  }\n\n  setAccessibilityAttributes() {\n    const ariaLabel = this.options.ariaLabel || 'scrollable content';\n\n    this.contentWrapperEl.setAttribute('tabindex', '0');\n    this.contentWrapperEl.setAttribute('role', 'region');\n    this.contentWrapperEl.setAttribute('aria-label', ariaLabel);\n  }\n\n  initListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll);\n\n    // Browser zoom triggers a window resize\n    elWindow.addEventListener('resize', this.onWindowResize);\n\n    // Hack for https://github.com/WICG/ResizeObserver/issues/38\n    let resizeObserverStarted = false;\n    let resizeAnimationFrameId = null;\n    const resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n\n    this.resizeObserver = new resizeObserver(() => {\n      if (!resizeObserverStarted || resizeAnimationFrameId !== null) return;\n\n      resizeAnimationFrameId = elWindow.requestAnimationFrame(() => {\n        this.recalculate();\n        resizeAnimationFrameId = null;\n      });\n    });\n\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n\n    elWindow.requestAnimationFrame(() => {\n      resizeObserverStarted = true;\n    });\n\n    // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  }\n\n  recalculate() {\n    const elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n\n    const isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    const isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    const contentElOffsetWidth = this.contentEl.offsetWidth;\n\n    const contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n\n    const elOverflowX = this.elStyles.overflowX;\n    const elOverflowY = this.elStyles.overflowY;\n\n    this.contentEl.style.padding = `${this.elStyles.paddingTop} ${this.elStyles.paddingRight} ${this.elStyles.paddingBottom} ${this.elStyles.paddingLeft}`;\n    this.wrapperEl.style.margin = `-${this.elStyles.paddingTop} -${this.elStyles.paddingRight} -${this.elStyles.paddingBottom} -${this.elStyles.paddingLeft}`;\n\n    const contentElScrollHeight = this.contentEl.scrollHeight;\n    const contentElScrollWidth = this.contentEl.scrollWidth;\n\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%';\n\n    // Determine placeholder size\n    this.placeholderEl.style.width = isWidthAuto\n      ? `${contentElOffsetWidth}px`\n      : 'auto';\n    this.placeholderEl.style.height = `${contentElScrollHeight}px`;\n\n    const contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing =\n      contentElScrollHeight > contentWrapperElOffsetHeight;\n\n    // Set isOverflowing to false if user explicitely set hidden overflow\n    this.axis.x.isOverflowing =\n      elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing =\n      elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n\n    this.axis.x.forceVisible =\n      this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible =\n      this.options.forceVisible === 'y' || this.options.forceVisible === true;\n\n    this.hideNativeScrollbar();\n\n    // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n    let offsetForXScrollbar = this.axis.x.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n    let offsetForYScrollbar = this.axis.y.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n\n    this.axis.x.isOverflowing =\n      this.axis.x.isOverflowing &&\n      contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing =\n      this.axis.y.isOverflowing &&\n      contentElScrollHeight >\n        contentWrapperElOffsetHeight - offsetForXScrollbar;\n\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n\n    this.axis.x.scrollbar.el.style.width = `${this.axis.x.scrollbar.size}px`;\n    this.axis.y.scrollbar.el.style.height = `${this.axis.y.scrollbar.size}px`;\n\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n\n  /**\n   * Calculate scrollbar size\n   */\n  getScrollbarSize(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n\n    const contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    let scrollbarSize;\n\n    let scrollbarRatio = trackSize / contentSize;\n\n    // Calculate new height/position of drag handle.\n    scrollbarSize = Math.max(\n      ~~(scrollbarRatio * trackSize),\n      this.options.scrollbarMinSize\n    );\n\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n\n    return scrollbarSize;\n  }\n\n  positionScrollbar(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n\n    const contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    let scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollingInverted\n        ? -scrollOffset\n        : scrollOffset;\n    let scrollPourcent = scrollOffset / (contentSize - hostSize);\n\n    let handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n        ? handleOffset + (trackSize - scrollbar.size)\n        : handleOffset;\n\n    scrollbar.el.style.transform =\n      axis === 'x'\n        ? `translate3d(${handleOffset}px, 0, 0)`\n        : `translate3d(0, ${handleOffset}px, 0)`;\n  }\n\n  toggleTrackVisibility(axis = 'y') {\n    const track = this.axis[axis].track.el;\n    const scrollbar = this.axis[axis].scrollbar.el;\n\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    }\n\n    // Even if forceVisible is enabled, scrollbar itself should be hidden\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  }\n\n  hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] =\n      this.axis.y.isOverflowing || this.axis.y.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n    this.offsetEl.style.bottom =\n      this.axis.x.isOverflowing || this.axis.x.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n  }\n\n  /**\n   * On scroll event handling\n   */\n  onScroll = () => {\n    const elWindow = getElementWindow(this.el);\n    if (!this.scrollXTicking) {\n      elWindow.requestAnimationFrame(this.scrollX);\n      this.scrollXTicking = true;\n    }\n\n    if (!this.scrollYTicking) {\n      elWindow.requestAnimationFrame(this.scrollY);\n      this.scrollYTicking = true;\n    }\n  };\n\n  scrollX = () => {\n    if (this.axis.x.isOverflowing) {\n      this.showScrollbar('x');\n      this.positionScrollbar('x');\n    }\n\n    this.scrollXTicking = false;\n  };\n\n  scrollY = () => {\n    if (this.axis.y.isOverflowing) {\n      this.showScrollbar('y');\n      this.positionScrollbar('y');\n    }\n\n    this.scrollYTicking = false;\n  };\n\n  onMouseEnter = () => {\n    this.showScrollbar('x');\n    this.showScrollbar('y');\n  };\n\n  onMouseMove = e => {\n    this.mouseX = e.clientX;\n    this.mouseY = e.clientY;\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseMoveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseMoveForAxis('y');\n    }\n  };\n\n  onMouseMoveForAxis(axis = 'y') {\n    this.axis[axis].track.rect = this.axis[\n      axis\n    ].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n\n    const isWithinScrollbarBoundsX = this.isWithinBounds(\n      this.axis[axis].scrollbar.rect\n    );\n\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  }\n\n  onMouseLeave = () => {\n    this.onMouseMove.cancel();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseLeaveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseLeaveForAxis('y');\n    }\n\n    this.mouseX = -1;\n    this.mouseY = -1;\n  };\n\n  onMouseLeaveForAxis(axis = 'y') {\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  }\n\n  onWindowResize = () => {\n    // Recalculate scrollbarWidth in case it's a zoom\n    this.scrollbarWidth = this.getScrollbarWidth();\n\n    this.hideNativeScrollbar();\n  };\n\n  /**\n   * Show scrollbar\n   */\n  showScrollbar(axis = 'y') {\n    let scrollbar = this.axis[axis].scrollbar.el;\n\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n\n  /**\n   * Hide Scrollbar\n   */\n  hideScrollbars = () => {\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (!this.isWithinBounds(this.axis.y.track.rect)) {\n      this.axis.y.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.y.isVisible = false;\n    }\n\n    if (!this.isWithinBounds(this.axis.x.track.rect)) {\n      this.axis.x.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.x.isVisible = false;\n    }\n  };\n\n  onPointerEvent = e => {\n    let isWithinTrackXBounds, isWithinTrackYBounds;\n\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      isWithinTrackXBounds = this.isWithinBounds(this.axis.x.track.rect);\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      isWithinTrackYBounds = this.isWithinBounds(this.axis.y.track.rect);\n    }\n\n    // If any pointer event is called on the scrollbar\n    if (isWithinTrackXBounds || isWithinTrackYBounds) {\n      // Preventing the event's default action stops text being\n      // selectable during the drag.\n      e.preventDefault();\n      // Prevent event leaking\n      e.stopPropagation();\n\n      if (e.type === 'mousedown') {\n        if (isWithinTrackXBounds) {\n          this.axis.x.scrollbar.rect = this.axis.x.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.x.scrollbar.rect)) {\n            this.onDragStart(e, 'x');\n          } else {\n            this.onTrackClick(e, 'x');\n          }\n        }\n\n        if (isWithinTrackYBounds) {\n          this.axis.y.scrollbar.rect = this.axis.y.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.y.scrollbar.rect)) {\n            this.onDragStart(e, 'y');\n          } else {\n            this.onTrackClick(e, 'y');\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * on scrollbar handle drag movement starts\n   */\n  onDragStart(e, axis = 'y') {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n    const eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset =\n      eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n\n    this.el.classList.add(this.classNames.dragging);\n\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n\n  /**\n   * Drag scrollbar handle\n   */\n  drag = e => {\n    let eventOffset;\n    const track = this.axis[this.draggedAxis].track;\n    const trackSize = track.rect[this.axis[this.draggedAxis].sizeAttr];\n    const scrollbar = this.axis[this.draggedAxis].scrollbar;\n    const contentSize = this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollSizeAttr\n    ];\n    const hostSize = parseInt(\n      this.elStyles[this.axis[this.draggedAxis].sizeAttr],\n      10\n    );\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (this.draggedAxis === 'y') {\n      eventOffset = e.pageY;\n    } else {\n      eventOffset = e.pageX;\n    }\n\n    // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n    let dragPos =\n      eventOffset -\n      track.rect[this.axis[this.draggedAxis].offsetAttr] -\n      this.axis[this.draggedAxis].dragOffset;\n    // Convert the mouse position into a percentage of the scrollbar height/width.\n    let dragPerc = dragPos / (trackSize - scrollbar.size);\n\n    // Scroll the content by the same percentage.\n    let scrollPos = dragPerc * (contentSize - hostSize);\n\n    // Fix browsers inconsistency on RTL\n    if (this.draggedAxis === 'x') {\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n          ? scrollPos - (trackSize + scrollbar.size)\n          : scrollPos;\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted\n          ? -scrollPos\n          : scrollPos;\n    }\n\n    this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollOffsetAttr\n    ] = scrollPos;\n  };\n\n  /**\n   * End scroll handle drag\n   */\n  onEndDrag = e => {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.el.classList.remove(this.classNames.dragging);\n\n    elDocument.removeEventListener('mousemove', this.drag, true);\n    elDocument.removeEventListener('mouseup', this.onEndDrag, true);\n    this.removePreventClickId = elWindow.setTimeout(() => {\n      // Remove these asynchronously so we still suppress click events\n      // generated simultaneously with mouseup.\n      elDocument.removeEventListener('click', this.preventClick, true);\n      elDocument.removeEventListener('dblclick', this.preventClick, true);\n      this.removePreventClickId = null;\n    });\n  };\n\n  /**\n   * Handler to ignore click events during drag\n   */\n  preventClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  onTrackClick(e, axis = 'y') {\n    if (!this.options.clickOnTrack) return;\n\n    const elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n    const scrollbar = this.axis[axis].scrollbar;\n    const scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    let scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    const t =\n      axis === 'y'\n        ? this.mouseY - scrollbarOffset\n        : this.mouseX - scrollbarOffset;\n    const dir = t < 0 ? -1 : 1;\n    const scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n\n    const scrollTo = () => {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          scrolled -= this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          scrolled += this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n\n    scrollTo();\n  }\n\n  /**\n   * Getter for content element\n   */\n  getContentElement() {\n    return this.contentEl;\n  }\n\n  /**\n   * Getter for original scrolling element\n   */\n  getScrollElement() {\n    return this.contentWrapperEl;\n  }\n\n  getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (\n        getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar')\n          .display === 'none' ||\n        'scrollbarWidth' in document.documentElement.style ||\n        '-ms-overflow-style' in document.documentElement.style\n      ) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  }\n\n  removeListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n\n    elWindow.removeEventListener('resize', this.onWindowResize);\n\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n\n    // Cancel all debounced functions\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n\n  /**\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\n   */\n  unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n\n  /**\n   * Check if mouse is within bounds\n   */\n  isWithinBounds(bbox) {\n    return (\n      this.mouseX >= bbox.left &&\n      this.mouseX <= bbox.left + bbox.width &&\n      this.mouseY >= bbox.top &&\n      this.mouseY <= bbox.top + bbox.height\n    );\n  }\n\n  /**\n   * Find element children matches query\n   */\n  findChild(el, query) {\n    const matches =\n      el.matches ||\n      el.webkitMatchesSelector ||\n      el.mozMatchesSelector ||\n      el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, child =>\n      matches.call(child, query)\n    )[0];\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}